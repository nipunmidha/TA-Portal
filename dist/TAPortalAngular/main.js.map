{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-applicant-module/admin-applicant-module.component.css","webpack:///./src/app/admin-applicant-module/admin-applicant-module.component.html","webpack:///./src/app/admin-applicant-module/admin-applicant-module.component.ts","webpack:///./src/app/admin-course-module/admin-course-module.component.css","webpack:///./src/app/admin-course-module/admin-course-module.component.html","webpack:///./src/app/admin-course-module/admin-course-module.component.ts","webpack:///./src/app/admin-home/admin-home.component.css","webpack:///./src/app/admin-home/admin-home.component.html","webpack:///./src/app/admin-home/admin-home.component.ts","webpack:///./src/app/admin-instructors-pannel/admin-instructors-pannel.component.css","webpack:///./src/app/admin-instructors-pannel/admin-instructors-pannel.component.html","webpack:///./src/app/admin-instructors-pannel/admin-instructors-pannel.component.ts","webpack:///./src/app/admin-menu/admin-menu.component.css","webpack:///./src/app/admin-menu/admin-menu.component.html","webpack:///./src/app/admin-menu/admin-menu.component.ts","webpack:///./src/app/admin-pannel/admin-pannel.component.css","webpack:///./src/app/admin-pannel/admin-pannel.component.html","webpack:///./src/app/admin-pannel/admin-pannel.component.ts","webpack:///./src/app/admin-school-module/admin-school-module.component.css","webpack:///./src/app/admin-school-module/admin-school-module.component.html","webpack:///./src/app/admin-school-module/admin-school-module.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/applicant-profile/applicant-profile.component.css","webpack:///./src/app/applicant-profile/applicant-profile.component.html","webpack:///./src/app/applicant-profile/applicant-profile.component.ts","webpack:///./src/app/applications-grid/applications-grid.component.css","webpack:///./src/app/applications-grid/applications-grid.component.html","webpack:///./src/app/applications-grid/applications-grid.component.ts","webpack:///./src/app/errorpage/errorpage.component.css","webpack:///./src/app/errorpage/errorpage.component.html","webpack:///./src/app/errorpage/errorpage.component.ts","webpack:///./src/app/instructor-home/instructor-home.component.css","webpack:///./src/app/instructor-home/instructor-home.component.html","webpack:///./src/app/instructor-home/instructor-home.component.ts","webpack:///./src/app/instructor-position/instructor-position.component.css","webpack:///./src/app/instructor-position/instructor-position.component.html","webpack:///./src/app/instructor-position/instructor-position.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/applicant.model.client.ts","webpack:///./src/app/models/application.model.client.ts","webpack:///./src/app/models/course.model.client.ts","webpack:///./src/app/models/instructor.model.client.ts","webpack:///./src/app/models/position.model.client.ts","webpack:///./src/app/models/regsiter.model.client.ts","webpack:///./src/app/models/school.model.client.ts","webpack:///./src/app/models/user.model.client.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/position-grid/position-grid.component.css","webpack:///./src/app/position-grid/position-grid.component.html","webpack:///./src/app/position-grid/position-grid.component.ts","webpack:///./src/app/position-page/position-page.component.css","webpack:///./src/app/position-page/position-page.component.html","webpack:///./src/app/position-page/position-page.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/review-grid/review-grid.component.css","webpack:///./src/app/review-grid/review-grid.component.html","webpack:///./src/app/review-grid/review-grid.component.ts","webpack:///./src/app/services/admin.service.client.ts","webpack:///./src/app/services/applicant.service.client.ts","webpack:///./src/app/services/application.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/instrcutor.service.client.ts","webpack:///./src/app/services/position.service.client.ts","webpack:///./src/app/services/school.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n.fa {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.btn\\r\\n{\\r\\n  margin: 2px;\\r\\n}\\r\\n\\r\\n.list-group{\\r\\n  position: fixed;\\r\\n  cursor:pointer;\\r\\n}\\r\\n\\r\\n.list-group-item\\r\\n{\\r\\n  cursor:pointer;\\r\\n}\\r\\n\\r\\n#hiddenPass\\r\\n{\\r\\n  font-weight: lighter;\\r\\n  font-family: \\\"Bell MT\\\";\\r\\n  color: red;\\r\\n}\\r\\n\"","module.exports = \"<legend style=\\\"font-weight: bold\\\">\\n  All Applicants\\n</legend>\\n<div class=\\\"alert alert-danger\\\"  *ngIf=\\\"addingError\\\">\\n  <strong>Error!</strong> There was some error while adding. Please retry\\n</div>\\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n    <th scope=\\\"col\\\">Email</th>\\n    <th scope=\\\"col\\\">Password</th>\\n    <th scope=\\\"col\\\">First Name</th>\\n    <th scope=\\\"col\\\">Last Name</th>\\n    <th scope=\\\"col\\\">School</th>\\n  </tr>\\n  <!--<div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"-->\\n  <!--class=\\\"alert alert-danger\\\">-->\\n  <!--<div *ngIf=\\\"email.errors.required\\\">-->\\n  <!--Email is required.-->\\n  <!--</div>-->\\n  <!--<div *ngIf=\\\"email.errors.invalid\\\">-->\\n  <!--Enter valid email-->\\n  <!--</div>-->\\n  <!--</div>-->\\n  <th scope=\\\"col\\\">\\n    <input  [(ngModel)]=\\\"instructor.email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\"\\n            required #password = \\\"ngModel\\\">\\n  </th>\\n  <th scope=\\\"col\\\">\\n    <input  [(ngModel)]=\\\"instructor.password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\"\\n            required #password = \\\"ngModel\\\" *ngIf=\\\"!isEdit\\\">\\n    <input  [(ngModel)]=\\\"instructor.password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\"\\n            *ngIf=\\\"isEdit\\\">\\n  </th>\\n  <!--<th>-->\\n  <!--<input [(ngModel)]=\\\"instructor.email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\"-->\\n  <!--required  #email=\\\"ngModel\\\"  >-->\\n  <!--</th>-->\\n  <th scope=\\\"col\\\">\\n    <input  [(ngModel)]=\\\"instructor.firstName\\\" type=\\\"text\\\" placeholder=\\\"First Name\\\" class=\\\"form-control\\\"\\n            #domain = \\\"ngModel\\\">\\n  </th>\\n  <th scope=\\\"col\\\" >\\n    <input [(ngModel)]=\\\"instructor.lastName\\\" type=\\\"text\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control\\\" >\\n  </th>\\n  <th scope=\\\"col\\\" >\\n    <!--<div *ngIf=\\\"school.invalid && (school.dirty || school.touched)\\\"-->\\n    <!--class=\\\"alert alert-danger\\\">-->\\n    <!--<div *ngIf=\\\"school.errors.required\\\">-->\\n    <!--School is required.-->\\n    <!--</div>-->\\n    <!--</div>-->\\n    <input [(ngModel)]=\\\"instructor.school\\\" type=\\\"text\\\" placeholder=\\\"School\\\" required class=\\\"form-control\\\"\\n           #school=\\\"ngModel\\\" (input)=\\\"schoolChange(instructor.school)\\\">\\n    <div *ngIf=\\\"results.length >0\\\">\\n      <ul class=\\\"list-group\\\" >\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let school of results\\\"\\n            (click)=\\\"selectSchool(school)\\\">\\n          {{school.name}}</li>\\n      </ul>\\n    </div>\\n  </th>\\n  <th scope=\\\"col\\\" >\\n    <a class=\\\"btn btn-primary\\\" (click)=\\\"addInstructor(instructor)\\\" *ngIf=\\\"!isEdit\\\"><i class=\\\"fa fa-plus\\\">\\n    </i></a>\\n    <a class=\\\"btn btn-success\\\" *ngIf=\\\"isEdit\\\" (click)=\\\"updateInstructor(instructor)\\\" ><i class=\\\"fa fa-clipboard-check\\\">\\n    </i></a>\\n  </th>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let instructor of instructors\\\">\\n    <td>{{instructor.email}}</td>\\n    <td id=\\\"hiddenPass\\\"> Hidden Password</td>\\n    <td>{{instructor.firstName}}</td>\\n    <td>{{instructor.lastName}}</td>\\n    <td>{{instructor.school.name}}</td>\\n    <td>\\n      <div class=\\\"btn-group\\\">\\n        <a class=\\\" btn btn-warning\\\" (click)=\\\"editInstructor(instructor)\\\">\\n          <i class=\\\"fa fa-edit\\\"></i>\\n        </a>\\n        <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteInstructor(instructor._id)\\\">\\n          <i class=\\\"fa fa-trash\\\"></i>\\n        </a>\\n      </div>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SchoolServiceClient} from '../services/school.service.client';\nimport {InstructorServiceClient} from '../services/instrcutor.service.client';\nimport {School} from '../models/school.model.client';\nimport {ApplicantServiceClient} from '../services/applicant.service.client';\nimport {Applicant} from '../models/applicant.model.client';\nimport {Course} from '../models/course.model.client';\n\n@Component({\n  selector: 'app-admin-applicant-module',\n  templateUrl: './admin-applicant-module.component.html',\n  styleUrls: ['./admin-applicant-module.component.css']\n})\nexport class AdminApplicantModuleComponent implements OnInit {\n\n  constructor(private service: ApplicantServiceClient,\n              private schoolService: SchoolServiceClient) { }\n  instructors: Applicant[] = [];\n  instructor: Applicant = new Applicant();\n  results: School[] = [];\n  instructorSchool: School = new School();\n  addingError;\n  isEdit;\n  isSet = false;\n  ngOnInit() {\n    this.findAllInstructor();\n  }\n  findAllInstructor() {\n    this.service.findAllInstructors()\n      .then(users => this.instructors = users);\n  }\n  schoolChange(name) {\n    if (name.length > 2 ) {\n      this.schoolService.searchSchool(name)\n        .then(res => {\n          if (res.status === 200) {\n            res.json()\n              .then(schools => this.results = schools);\n          }\n        });\n    }\n    if (name.length === 2) {\n      this.results = [];\n    }\n  }\n  selectSchool(school) {\n    this.instructorSchool = school;\n    this.instructor.school = school.name;\n    this.results = [];\n    this.isSet = true;\n  }\n  addInstructor( instructor) {\n    this.addingError = false;\n    instructor.school = this.instructorSchool;\n    this.service.createApplicant(instructor)\n      .then(res => {\n        if (res.status === 200) {\n          this.instructor = new Applicant();\n          this.findAllInstructor();\n        } else {\n          this.addingError = true;\n        }\n      });\n  }\n  deleteInstructor(id) {\n    this.service.deleteApplicant(id)\n      .then(() => this.findAllInstructor());\n  }\n  editInstructor(instructor) {\n    this.instructor._id = instructor._id;\n    this.instructor.email = instructor.email;\n    this.instructor.firstName = instructor.firstName;\n    this.instructor.lastName = instructor.lastName;\n    this.instructor.school = instructor.school.name;\n    this.isEdit = true;\n  }\n  updateInstructor(instructor) {\n    if (this.isSet) {\n      const ins = {\n      email: instructor.email,\n      password: instructor.password,\n      firstName: instructor.firstName,\n      lastName: instructor.lastName,\n      _id: instructor._id,\n      school: this.instructorSchool._id };\n      this.service.updateApplicant(ins)\n        .then(res => {\n          if (res.status === 200) {\n            this.instructor = new Applicant();\n            this.isEdit = false;\n            this.isSet = false;\n            this.findAllInstructor();\n          }\n        });\n    } else {\n      const ins = new Applicant();\n      ins.email = instructor.email;\n      ins.password = instructor.password;\n      ins.firstName = instructor.firstName;\n      ins.lastName = instructor.lastName;\n      ins._id = instructor._id;\n      this.service.updateApplicant(ins)\n        .then(res => {\n          if (res.status === 200) {\n            this.instructor = new Applicant();\n            this.isEdit = false;\n            this.isSet = false;\n            this.findAllInstructor();\n          }\n        });\n    }\n  }\n}\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n.fa {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.btn\\r\\n{\\r\\n  margin: 2px;\\r\\n}\\r\\n\\r\\n.list-group{\\r\\n  position: fixed;\\r\\n  cursor:pointer;\\r\\n}\\r\\n\\r\\n.list-group-item\\r\\n{\\r\\n  cursor:pointer;\\r\\n}\\r\\n\\r\\n#hiddenPass\\r\\n{\\r\\n  font-weight: lighter;\\r\\n  font-family: \\\"Bell MT\\\";\\r\\n  color: red;\\r\\n}\\r\\n\"","module.exports = \"<legend style=\\\"font-weight: bold\\\">\\n  All Courses\\n</legend>\\n<div class=\\\"alert alert-danger\\\"  *ngIf=\\\"addingError\\\">\\n  <strong>Error!</strong> There was some error while adding. Please retry\\n</div>\\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n    <th scope=\\\"col\\\">Name</th>\\n    <th scope=\\\"col\\\">Course Number</th>\\n    <th scope=\\\"col\\\">School</th>\\n  </tr>\\n\\n  <th scope=\\\"col\\\">\\n    <input  [(ngModel)]=\\\"instructor.name\\\" type=\\\"string\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\"\\n            required #password = \\\"ngModel\\\">\\n  </th>\\n  <th scope=\\\"col\\\">\\n    <input  [(ngModel)]=\\\"instructor.courseNumber\\\" type=\\\"string\\\" placeholder=\\\"Course Number\\\" class=\\\"form-control\\\"\\n            required #password = \\\"ngModel\\\" >\\n  </th>\\n  <th>\\n    <input [(ngModel)]=\\\"instructor.school\\\" type=\\\"text\\\" placeholder=\\\"School\\\" required class=\\\"form-control\\\"\\n           #school=\\\"ngModel\\\" (input)=\\\"schoolChange(instructor.school)\\\">\\n    <div *ngIf=\\\"results.length >0\\\">\\n      <ul class=\\\"list-group\\\" >\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let school of results\\\"\\n            (click)=\\\"selectSchool(school)\\\">\\n          {{school.name}}</li>\\n      </ul>\\n    </div>\\n  </th>\\n  <th scope=\\\"col\\\" >\\n    <a class=\\\"btn btn-primary\\\" (click)=\\\"addInstructor(instructor)\\\" *ngIf=\\\"!isEdit\\\"><i class=\\\"fa fa-plus\\\">\\n    </i></a>\\n    <a class=\\\"btn btn-success\\\" *ngIf=\\\"isEdit\\\" (click)=\\\"updateInstructor(instructor)\\\" ><i class=\\\"fa fa-clipboard-check\\\">\\n    </i></a>\\n  </th>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let instructor of instructors\\\">\\n    <td>{{instructor.name}}</td>\\n    <td>{{instructor.courseNumber}}</td>\\n    <td>{{instructor.school.name}}</td>\\n    <td>\\n        <a class=\\\" btn btn-warning\\\" (click)=\\\"editInstructor(instructor)\\\">\\n          <i class=\\\"fa fa-edit\\\"></i>\\n        </a>\\n        <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteInstructor(instructor._id)\\\">\\n          <i class=\\\"fa fa-trash\\\"></i>\\n        </a>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SchoolServiceClient} from '../services/school.service.client';\nimport {InstructorServiceClient} from '../services/instrcutor.service.client';\nimport {School} from '../models/school.model.client';\nimport {Course} from '../models/course.model.client';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-admin-course-module',\n  templateUrl: './admin-course-module.component.html',\n  styleUrls: ['./admin-course-module.component.css']\n})\nexport class AdminCourseModuleComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private schoolService: SchoolServiceClient) { }\n  instructors: Course[] = [];\n  instructor: Course = new Course();\n  results: School[] = [];\n  instructorSchool: School = new School();\n  addingError;\n  isEdit;\n  isSet = false;\n  ngOnInit() {\n    this.findAllInstructor();\n  }\n  findAllInstructor() {\n    this.service.findAllCourses()\n      .then(users => this.instructors = users);\n  }\n  schoolChange(name) {\n    if (name.length > 2 ) {\n      this.schoolService.searchSchool(name)\n        .then(res => {\n          if (res.status === 200) {\n            res.json()\n              .then(schools => this.results = schools);\n          }\n        });\n    }\n    if (name.length === 2) {\n      this.results = [];\n    }\n  }\n  selectSchool(school) {\n    this.instructorSchool = school;\n    this.instructor.school = school.name;\n    this.results = [];\n    this.isSet = true;\n  }\n  addInstructor( instructor) {\n    this.addingError = false;\n    instructor.school = this.instructorSchool;\n    this.service.createCourse(instructor)\n      .then(res => {\n        if (res.status === 200) {\n          this.instructor = new Course();\n          this.findAllInstructor();\n        } else {\n          this.addingError = true;\n        }\n      });\n  }\n  deleteInstructor(id) {\n    this.service.deleteCourse(id)\n      .then(() => this.findAllInstructor());\n  }\n  editInstructor(instructor) {\n    this.instructor._id = instructor._id;\n    this.instructor.courseNumber = instructor.courseNumber;\n    this.instructor.name = instructor.name;\n    this.instructor.school = instructor.school.name;\n    this.isEdit = true;\n  }\n  updateInstructor(instructor) {\n    if (this.isSet) {\n      const ins = {\n        name: instructor.email,\n        courseNumber: instructor.courseNumber,\n        _id: instructor._id,\n        school: this.instructorSchool._id };\n      this.service.updateCourse(ins)\n        .then(res => {\n          if (res.status === 200) {\n            this.instructor = new Course();\n            this.isEdit = false;\n            this.isSet = false;\n            this.findAllInstructor();\n          }\n        });\n    } else {\n      const ins = new Course();\n      ins.name = instructor.email;\n      ins.courseNumber = instructor.courseNumber;\n      ins._id = instructor._id;\n      this.service.updateCourse(ins)\n        .then(res => {\n          if (res.status === 200) {\n            this.instructor = new Course();\n            this.isEdit = false;\n            this.isSet = false;\n            this.findAllInstructor();\n          }\n        });\n    }\n\n  }\n}\n","module.exports = \".col-lg-2 {\\r\\n  background: #67adef;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  cursor: pointer;\\r\\nborder: grey;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"alert alert-danger\\\"  *ngIf=\\\"!isAdmin && !wrongAccess\\\">\\n  <strong>Session Expired!</strong> Please login.\\n  <a class=\\\"float-md-right\\\" routerLink=\\\"/login\\\">Login</a>\\n</div>\\n<div class=\\\"alert alert-danger\\\"  *ngIf=\\\"wrongAccess\\\">\\n  <strong>You are on wrong page!</strong> Move Out.\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"isAdmin\\\">\\n\\n  <div class=\\\"col-lg-2\\\">\\n      <app-admin-menu></app-admin-menu>\\n  </div>\\n\\n  <div class=\\\"col-lg-10\\\">\\n    <app-admin-pannel></app-admin-pannel>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AdminServiceClient} from '../services/admin.service.client';\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  constructor(private service: AdminServiceClient) { }\n  isAdmin;\n  wrongAccess;\n  ngOnInit() {\n    this.service.profile()\n      .then(user => {\n        if (user.type === 'ADMIN') { this.isAdmin = true; }\n        if (user.type !== 'ADMIN' && user) { this.wrongAccess = true; }\n      });\n  }\n\n}\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n.fa {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.btn\\r\\n{\\r\\n  margin: 2px;\\r\\n}\\r\\n\\r\\n.list-group{\\r\\n  position: fixed;\\r\\n  cursor:pointer;\\r\\n}\\r\\n\\r\\n.list-group-item\\r\\n{\\r\\n  cursor:pointer;\\r\\n}\\r\\n\\r\\n#hiddenPass\\r\\n{\\r\\n  font-weight: lighter;\\r\\n  font-family: \\\"Bell MT\\\";\\r\\n  color: red;\\r\\n}\\r\\n\"","module.exports = \"<legend style=\\\"font-weight: bold\\\">\\n  All Instructors\\n</legend>\\n<div class=\\\"alert alert-danger\\\"  *ngIf=\\\"addingError\\\">\\n  <strong>Error!</strong> There was some error while adding. Please retry\\n</div>\\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n    <th scope=\\\"col\\\">Email</th>\\n    <th scope=\\\"col\\\">Password</th>\\n    <th scope=\\\"col\\\">First Name</th>\\n    <th scope=\\\"col\\\">Last Name</th>\\n    <th scope=\\\"col\\\">School</th>\\n  </tr>\\n    <!--<div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"-->\\n         <!--class=\\\"alert alert-danger\\\">-->\\n      <!--<div *ngIf=\\\"email.errors.required\\\">-->\\n        <!--Email is required.-->\\n      <!--</div>-->\\n      <!--<div *ngIf=\\\"email.errors.invalid\\\">-->\\n       <!--Enter valid email-->\\n      <!--</div>-->\\n    <!--</div>-->\\n  <th scope=\\\"col\\\">\\n    <input  [(ngModel)]=\\\"instructor.email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\"\\n            required #password = \\\"ngModel\\\">\\n  </th>\\n  <th scope=\\\"col\\\">\\n    <input  [(ngModel)]=\\\"instructor.password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\"\\n           required #password = \\\"ngModel\\\" *ngIf=\\\"!isEdit\\\">\\n    <input  [(ngModel)]=\\\"instructor.password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\"\\n            *ngIf=\\\"isEdit\\\">\\n  </th>\\n  <!--<th>-->\\n    <!--<input [(ngModel)]=\\\"instructor.email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\"-->\\n           <!--required  #email=\\\"ngModel\\\"  >-->\\n  <!--</th>-->\\n  <th scope=\\\"col\\\">\\n    <input  [(ngModel)]=\\\"instructor.firstName\\\" type=\\\"text\\\" placeholder=\\\"First Name\\\" class=\\\"form-control\\\"\\n           #domain = \\\"ngModel\\\">\\n  </th>\\n  <th scope=\\\"col\\\" >\\n    <input [(ngModel)]=\\\"instructor.lastName\\\" type=\\\"text\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control\\\" >\\n  </th>\\n  <th scope=\\\"col\\\" >\\n    <!--<div *ngIf=\\\"school.invalid && (school.dirty || school.touched)\\\"-->\\n         <!--class=\\\"alert alert-danger\\\">-->\\n      <!--<div *ngIf=\\\"school.errors.required\\\">-->\\n        <!--School is required.-->\\n      <!--</div>-->\\n    <!--</div>-->\\n    <input [(ngModel)]=\\\"instructor.school\\\" type=\\\"text\\\" placeholder=\\\"School\\\" required class=\\\"form-control\\\"\\n           #school=\\\"ngModel\\\" (input)=\\\"schoolChange(instructor.school)\\\">\\n    <div *ngIf=\\\"results.length >0\\\">\\n      <ul class=\\\"list-group\\\" >\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let school of results\\\"\\n            (click)=\\\"selectSchool(school)\\\">\\n          {{school.name}}</li>\\n      </ul>\\n    </div>\\n  </th>\\n  <th scope=\\\"col\\\" >\\n    <a class=\\\"btn btn-primary\\\" (click)=\\\"addInstructor(instructor)\\\" *ngIf=\\\"!isEdit\\\"><i class=\\\"fa fa-plus\\\">\\n    </i></a>\\n    <a class=\\\"btn btn-success\\\" *ngIf=\\\"isEdit\\\" (click)=\\\"updateInstructor(instructor)\\\" ><i class=\\\"fa fa-clipboard-check\\\">\\n    </i></a>\\n  </th>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let instructor of instructors\\\">\\n    <td>{{instructor.email}}</td>\\n    <td id=\\\"hiddenPass\\\"> Hidden Password</td>\\n    <td>{{instructor.firstName}}</td>\\n    <td>{{instructor.lastName}}</td>\\n    <td>{{instructor.school.name}}</td>\\n    <td>\\n      <div class=\\\"btn-group\\\">\\n        <a class=\\\" btn btn-warning\\\" (click)=\\\"editInstructor(instructor)\\\">\\n           <i class=\\\"fa fa-edit\\\"></i>\\n        </a>\\n        <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteInstructor(instructor._id)\\\">\\n          <i class=\\\"fa fa-trash\\\"></i>\\n        </a>\\n      </div>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {InstructorServiceClient} from '../services/instrcutor.service.client';\nimport {Instructor} from '../models/instructor.model.client';\nimport {SchoolServiceClient} from '../services/school.service.client';\nimport {School} from '../models/school.model.client';\n\n@Component({\n  selector: 'app-admin-instructors-pannel',\n  templateUrl: './admin-instructors-pannel.component.html',\n  styleUrls: ['./admin-instructors-pannel.component.css']\n})\nexport class AdminInstructorsPannelComponent implements OnInit {\n\n  constructor(private service: InstructorServiceClient,\n              private schoolService: SchoolServiceClient) { }\n  instructors: Instructor[] = [];\n  instructor: Instructor = new Instructor();\n  results: School[] = [];\n  instructorSchool: School = new School();\n  addingError;\n  isEdit;\n  isSet = false;\n  ngOnInit() {\n    this.findAllInstructor();\n  }\n  findAllInstructor() {\n    this.service.findAllInstructors()\n    .then(users => this.instructors = users);\n  }\n  schoolChange(name) {\n    if (name.length > 2 ) {\n      this.schoolService.searchSchool(name)\n        .then(res => {\n          if (res.status === 200) {\n            res.json()\n              .then(schools => this.results = schools);\n          }\n        });\n       }\n       if (name.length === 2) {\n         this.results = [];\n       }\n  }\n  selectSchool(school) {\n    this.instructorSchool = school;\n    this.instructor.school = school.name;\n    this.results = [];\n    this.isSet = true;\n  }\n  addInstructor( instructor) {\n    this.addingError = false;\n    instructor.school = this.instructorSchool;\n    this.service.createInstructor(instructor)\n      .then(res => {\n        if (res.status === 200) {\n          this.instructor = new Instructor();\n          this.findAllInstructor();\n        } else {\n          this.addingError = true;\n        }\n      });\n  }\n  deleteInstructor(id) {\n    this.service.deleteInstructor(id)\n      .then(() => this.findAllInstructor());\n  }\n  editInstructor(instructor) {\n    this.instructor._id = instructor._id;\n    this.instructor.email = instructor.email;\n    this.instructor.firstName = instructor.firstName;\n    this.instructor.lastName = instructor.lastName;\n    this.instructor.school = instructor.school.name;\n    this.isEdit = true;\n  }\n  updateInstructor(instructor) {\n\n    if (this.isSet) {\n      const ins = {\n        email: instructor.email,\n        password: instructor.password,\n        firstName: instructor.firstName,\n        lastName: instructor.lastName,\n        _id: instructor._id,\n        school: this.instructorSchool._id };\n      this.service.updateInstructor(ins)\n        .then(res => {\n          if (res.status === 200) {\n            this.instructor = new Instructor();\n            this.isEdit = false;\n            this.isSet = false;\n            this.findAllInstructor();\n          }\n        });\n    } else {\n      const ins = new Instructor();\n      ins.email = instructor.email;\n      ins.password = instructor.password;\n      ins.firstName = instructor.firstName;\n      ins.lastName = instructor.lastName;\n      ins._id = instructor._id;\n      this.service.updateInstructor(ins)\n        .then(res => {\n          if (res.status === 200) {\n            this.instructor = new Instructor();\n            this.isEdit = false;\n            this.isSet = false;\n            this.findAllInstructor();\n          }\n        });\n    }\n\n  }\n}\n","module.exports = \".webdev\\r\\n{\\r\\n  font-weight: bolder;\\r\\n  font-family: \\\"Times New Roman\\\";\\r\\n  margin: 7px;\\r\\n  padding-left: 10px;\\r\\n  background: #e8f2fc;\\r\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\na {\\r\\n  color: black;\\r\\n}\\r\\n.webdev.press\\r\\n{\\r\\n  font-weight: bolder;\\r\\n  font-family: \\\"Times New Roman\\\";\\r\\n  margin: 7px;\\r\\n  background: #4f5051;\\r\\n  box-shadow: 0 0px 0px 0 rgba(0, 0, 0, 0), 0 0px 0px 0 rgba(0, 0, 0, 0);\\r\\n}\\r\\na.press {\\r\\n  color: white;\\r\\n}\\r\\n.list-group{\\r\\n  margin-top: 25px;\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"menubar\\\">\\n<ul class=\\\"list-group\\\">\\n\\n  <a routerLink=\\\"/admin/school\\\" [ngClass]=\\\"{'press': pressedButton === 'school'}\\\">\\n    <li class=\\\"list-group-item webdev\\\" [ngClass]=\\\"{'press': pressedButton === 'school'}\\\">\\n      Schools\\n    </li>\\n  </a>\\n  <a routerLink=\\\"/admin/instructor\\\"  [ngClass]=\\\"{'press': pressedButton === 'instructor'}\\\">\\n    <li class=\\\"list-group-item webdev\\\" [ngClass]=\\\"{'press': pressedButton === 'instructor'}\\\">\\n    Instructors\\n    </li>\\n  </a>\\n  <a routerLink=\\\"/admin/applicant\\\" [ngClass]=\\\"{'press': pressedButton === 'applicant'}\\\" >\\n    <li class=\\\"list-group-item webdev\\\" [ngClass]=\\\"{'press': pressedButton === 'applicant'}\\\">\\n      Applicants\\n    </li>\\n  </a>\\n  <a routerLink=\\\"/admin/course\\\" [ngClass]=\\\"{'press': pressedButton === 'course'}\\\">\\n    <li class=\\\"list-group-item webdev\\\" [ngClass]=\\\"{'press': pressedButton === 'course'}\\\">\\n      Courses\\n    </li>\\n  </a>\\n  <!--<a routerLink=\\\"/admin/skill\\\" [ngClass]=\\\"{'press': pressedButton === 'skill'}\\\">-->\\n    <!--<li class=\\\"list-group-item webdev\\\" [ngClass]=\\\"{'press': pressedButton === 'skill'}\\\">-->\\n       <!--Applicants Skills-->\\n    <!--</li>-->\\n  <!--</a>-->\\n  <!--<a routerLink=\\\"/admin/application\\\" [ngClass]=\\\"{'press': pressedButton === 'application'}\\\">-->\\n    <!--<li class=\\\"list-group-item webdev\\\" [ngClass]=\\\"{'press': pressedButton === 'application'}\\\">-->\\n        <!--Applications-->\\n    <!--</li>-->\\n  <!--</a>-->\\n  <!--<a routerLink=\\\"/admin/position\\\" [ngClass]=\\\"{'press': pressedButton === 'position'}\\\">-->\\n    <!--<li class=\\\"list-group-item webdev\\\" [ngClass]=\\\"{'press': pressedButton === 'position'}\\\">-->\\n      <!--Positions-->\\n    <!--</li>-->\\n  <!--</a>-->\\n</ul>\\n  <br/>\\n  <br/>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-admin-menu',\n  templateUrl: './admin-menu.component.html',\n  styleUrls: ['./admin-menu.component.css']\n})\nexport class AdminMenuComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute) {\n    route.params.subscribe(params => this.pressMenu(params))\n  }\n  pressedButton\n  pressMenu(params) {\n    this.pressedButton = params.type;\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-admin-instructors-pannel *ngIf=\\\"taskType === 'instructor'\\\"></app-admin-instructors-pannel>\\n<app-admin-school-module *ngIf=\\\"taskType === 'school'\\\"></app-admin-school-module>\\n<app-admin-applicant-module *ngIf=\\\"taskType === 'applicant'\\\"></app-admin-applicant-module>\\n<app-admin-course-module *ngIf=\\\"taskType === 'course'\\\"></app-admin-course-module>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-admin-pannel',\n  templateUrl: './admin-pannel.component.html',\n  styleUrls: ['./admin-pannel.component.css']\n})\nexport class AdminPannelComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute) {\n    route.params.subscribe(params => this.loadType(params));\n  }\ntaskType;\n  loadType(params) {\n    this.taskType = params.type;\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n.fa {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.btn\\r\\n{\\r\\n  margin: 2px;\\r\\n}\\r\\n\"","module.exports = \"<legend style=\\\"font-weight: bold\\\">\\n  All Schools\\n</legend>\\n<div class=\\\"alert alert-danger\\\"  *ngIf=\\\"addingError\\\">\\n  <strong>Error!</strong> There was some error while adding. Please retry\\n</div>\\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n    <th scope=\\\"col\\\">Name</th>\\n    <th scope=\\\"col\\\">Email Domain</th>\\n    <th scope=\\\"col\\\">City</th>\\n  </tr>\\n    <th scope=\\\"col\\\" >\\n      <!--<div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"-->\\n           <!--class=\\\"alert alert-danger\\\">-->\\n        <!--<div *ngIf=\\\"name.errors.required\\\">-->\\n          <!--Name is required.-->\\n        <!--</div>-->\\n      <!--</div>-->\\n      <input [(ngModel)]=\\\"school.name\\\" type=\\\"text\\\" placeholder=\\\"School Name\\\" class=\\\"form-control\\\"\\n             required  #name=\\\"ngModel\\\">\\n    </th>\\n    <th scope=\\\"col\\\">\\n      <!--<div *ngIf=\\\"domain.invalid && (domain.dirty || domain.touched)\\\"-->\\n           <!--class=\\\"alert alert-danger\\\">-->\\n        <!--<div *ngIf=\\\"domain.errors.required\\\">-->\\n          <!--Email Domain is required.-->\\n        <!--</div>-->\\n      <!--</div>-->\\n      <input required [(ngModel)]=\\\"school.emailDomain\\\" type=\\\"text\\\" placeholder=\\\"Email Domain\\\" class=\\\"form-control\\\"\\n             #domain = \\\"ngModel\\\">\\n    </th>\\n    <th scope=\\\"col\\\" >\\n      <input [(ngModel)]=\\\"school.city\\\" type=\\\"text\\\" placeholder=\\\"City\\\" class=\\\"form-control\\\" >\\n    </th>\\n    <th scope=\\\"col\\\" >\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"addSchool(school)\\\" *ngIf=\\\"!isEdit\\\"><i class=\\\"fa fa-plus\\\">\\n      </i></a>\\n      <a class=\\\"btn btn-success\\\" *ngIf=\\\"isEdit\\\" (click)=\\\"updateSchool(school)\\\" ><i class=\\\"fa fa-clipboard-check\\\">\\n      </i></a>\\n    </th>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let school of schools\\\">\\n    <td>{{school.name}}</td>\\n    <td>{{school.emailDomain}}</td>\\n    <td>{{school.city}}</td>\\n    <td>\\n      <a class=\\\" btn btn-warning\\\" (click)=\\\"editSchool(school)\\\">\\n        <i class=\\\"fa fa-edit\\\"></i>\\n      </a>\\n      <a class=\\\"btn btn-danger\\\" (click)=\\\"deleteSchool(school._id)\\\">\\n        <i class=\\\"fa fa-trash\\\"></i>\\n      </a>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {School} from '../models/school.model.client';\nimport {SchoolServiceClient} from '../services/school.service.client';\n\n@Component({\n  selector: 'app-admin-school-module',\n  templateUrl: './admin-school-module.component.html',\n  styleUrls: ['./admin-school-module.component.css']\n})\nexport class AdminSchoolModuleComponent implements OnInit {\n\n  constructor(private service: SchoolServiceClient) { }\n  schools: School[] = [];\n  school: School = new School();\n  addingError;\n  isEdit;\n  ngOnInit() {\n    this.findAllSchools();\n  }\n  findAllSchools() {\n    this.service.findAllSchools()\n      .then(schools => this.schools = schools);\n  }\n  addSchool( school) {\n    this.addingError = false;\n    this.service.createSchool(school)\n      .then(res => {\n        if (res.status === 200) {\n          this.school.name = null;\n          this.school.emailDomain = null;\n          this.school.city = null;\n          this.findAllSchools();\n        } else { this.addingError = true; }\n      });\n  }\n  deleteSchool(id) {\n    this.service.deleteSchool(id)\n      .then(() => this.findAllSchools());\n  }\n  editSchool(school) {\n   this.school = school;\n   this.isEdit = true;\n  }\n  updateSchool(school) {\n    this.service.updateSchool(school)\n      .then(res => {\n        if (res.status === 200) {\n          this.school = new School();\n          this.isEdit = false;\n        }\n      });\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ErrorpageComponent } from './errorpage/errorpage.component';\nimport {FormsModule} from '@angular/forms';\nimport {routing} from './app.routing';\nimport { LoginComponent } from './login/login.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { AdminMenuComponent } from './admin-menu/admin-menu.component';\nimport { AdminPannelComponent } from './admin-pannel/admin-pannel.component';\nimport { AdminInstructorsPannelComponent } from './admin-instructors-pannel/admin-instructors-pannel.component';\nimport {InstructorServiceClient} from './services/instrcutor.service.client';\nimport { AdminSchoolModuleComponent } from './admin-school-module/admin-school-module.component';\nimport {SchoolServiceClient} from './services/school.service.client';\nimport { AdminApplicantModuleComponent } from './admin-applicant-module/admin-applicant-module.component';\nimport {ApplicantServiceClient} from './services/applicant.service.client';\nimport { AdminCourseModuleComponent } from './admin-course-module/admin-course-module.component';\nimport {CourseServiceClient} from './services/course.service.client';\nimport { ProfileComponent } from './profile/profile.component';\nimport {AdminServiceClient} from './services/admin.service.client';\nimport { InstructorHomeComponent } from './instructor-home/instructor-home.component';\nimport { InstructorPositionComponent } from './instructor-position/instructor-position.component';\nimport {PositionServiceClient} from './services/position.service.client';\nimport { PositionGridComponent } from './position-grid/position-grid.component';\nimport { PositionPageComponent } from './position-page/position-page.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ApplicantProfileComponent } from './applicant-profile/applicant-profile.component';\nimport {ApplicationServiceClient} from './services/application.service.client';\nimport { ApplicationsGridComponent } from './applications-grid/applications-grid.component';\nimport { ReviewGridComponent } from './review-grid/review-grid.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ErrorpageComponent,\n    LoginComponent,\n    AdminHomeComponent,\n    AdminMenuComponent,\n    AdminPannelComponent,\n    AdminInstructorsPannelComponent,\n    AdminSchoolModuleComponent,\n    AdminApplicantModuleComponent,\n    AdminCourseModuleComponent,\n    ProfileComponent,\n    InstructorHomeComponent,\n    InstructorPositionComponent,\n    PositionGridComponent,\n    PositionPageComponent,\n    RegisterComponent,\n    ApplicantProfileComponent,\n    ApplicationsGridComponent,\n    ReviewGridComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule\n  ],\n  providers: [\n    UserServiceClient,\n    InstructorServiceClient,\n    SchoolServiceClient,\n    ApplicantServiceClient,\n    CourseServiceClient,\n    AdminServiceClient,\n    PositionServiceClient,\n    ApplicationServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from '@angular/router';\r\nimport {NavbarComponent} from './navbar/navbar.component';\r\nimport {ErrorpageComponent} from './errorpage/errorpage.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {AdminHomeComponent} from './admin-home/admin-home.component';\r\nimport {AdminPannelComponent} from './admin-pannel/admin-pannel.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {InstructorHomeComponent} from './instructor-home/instructor-home.component';\r\nimport {InstructorPositionComponent} from './instructor-position/instructor-position.component';\r\nimport {PositionPageComponent} from './position-page/position-page.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {PositionGridComponent} from './position-grid/position-grid.component';\r\nimport {ApplicantProfileComponent} from './applicant-profile/applicant-profile.component';\r\nimport {ApplicationsGridComponent} from './applications-grid/applications-grid.component';\r\nimport {ReviewGridComponent} from './review-grid/review-grid.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  {path: 'home', component: PositionGridComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'admin', component: AdminHomeComponent},\r\n  {path: 'instructor', component: InstructorHomeComponent},\r\n  {path: 'applicant', component: PositionGridComponent},\r\n  {path: 'instructor/position', component: InstructorPositionComponent},\r\n  {path: 'admin/:type', component: AdminHomeComponent},\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'applicant/profile', component: ApplicantProfileComponent},\r\n  {path: 'position/:positionId', component: PositionPageComponent},\r\n  {path: 'position/:positionId/applications', component: ApplicationsGridComponent},\r\n  {path: 'position/:positionId/reviews', component: ReviewGridComponent},\r\n  {path: 'position/:positionId/profile/:profileId', component: ApplicantProfileComponent},\r\n  {path: '**', component: ErrorpageComponent}\r\n\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \".col-form-label{\\r\\n  /*text-align: right;*/\\r\\n}\\r\\nh2{\\r\\n  text-align: center;\\r\\n  font-family: \\\"Times New Roman\\\";\\r\\n}\\r\\n.ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n.dis{\\r\\n    /*text-align: left;*/\\r\\n}\\r\\n.reviews{\\r\\n  background-color: #e8f2fc;\\r\\n  padding: 10px;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n.cancel{\\r\\n  margin-left: -48px;\\r\\n}\\r\\n.gold{\\r\\n  color: gold;\\r\\n}\\r\\n.stars{\\r\\n  margin-left: 10px;\\r\\n}\\r\\n.list-group-item{\\r\\n  background: inherit;\\r\\n  margin-bottom: 10px;\\r\\n  padding: 10px;\\r\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <span class=\\\"cancel\\\" routerLink=\\\"/position/{{positionId}}/applications\\\" *ngIf=\\\"profView\\\">\\n    <i class=\\\"fa fa-times\\\"></i></span>\\n  <a class=\\\"btn btn-warning\\\" style=\\\"margin-top: 5px\\\" (click)=\\\"changeView()\\\"\\n     *ngIf=\\\"!sessionOut && !profView\\\">Public View</a>\\n  <div class=\\\"row justify-content-center align-self-center \\\" *ngIf=\\\"!publicView\\\">\\n    <div class=\\\"col-md-10\\\">\\n      <div class=\\\"alert alert-success\\\"  *ngIf=\\\"updateS\\\">\\n        <strong>Success!</strong>Profile Updated.\\n      </div>\\n      <div>\\n        <h2>User profile</h2>\\n      </div>\\n      <div class=\\\"alert alert-danger\\\"  *ngIf=\\\"sessionOut && !publicView\\\">\\n        <strong>Session Expired!</strong>Please login.\\n        <a class=\\\"float-md-right\\\" routerLink=\\\"/login\\\">Login</a>\\n      </div>\\n      <br/>\\n      <div *ngIf=\\\"!sessionOut\\\">\\n        <div class=\\\"form-group row\\\" >\\n          <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"schoolFld\\\">School</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-addon\\\">\\n                <a class=\\\"btn btn-dark active\\\">  <i class=\\\"fa fa-school\\\"></i>\\n                </a>\\n              </div>\\n              <input id=\\\"schoolFld\\\" [(ngModel)]=\\\"user.school.name\\\"  type=\\\"text\\\"\\n                     placeholder=\\\"School\\\" class=\\\"form-control input-md\\\" disabled>\\n\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-2  col-form-label\\\" for=\\\"emailFld\\\">Email Address</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-addon\\\">\\n                <a class=\\\"btn btn-dark active\\\">  <i class=\\\"fa fa-envelope\\\"></i>\\n                </a>\\n              </div>\\n              <input id=\\\"emailFld\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"Email Address\\\" type=\\\"text\\\"\\n                     placeholder=\\\"Email Address\\\" class=\\\"form-control input-md\\\" disabled>\\n\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"firstNameFld\\\">First Name</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-addon\\\">\\n                <a class=\\\"btn btn-dark active\\\"> <i class=\\\"fa fa-align-justify\\\"></i>\\n                </a>\\n              </div>\\n              <input [(ngModel)]=\\\"user.firstName\\\" id=\\\"firstNameFld\\\" name=\\\"First Name\\\" type=\\\"text\\\"\\n                     placeholder=\\\"First Name\\\" class=\\\"form-control input-md\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <!-- Text input-->\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"lastNameFld\\\">Last Name</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-addon\\\">\\n                <a class=\\\"btn btn-dark active\\\">  <i class=\\\"fa fa-align-justify\\\"></i>\\n                </a>\\n              </div>\\n              <input id=\\\"lastNameFld\\\" [(ngModel)]=\\\"user.lastName\\\" type=\\\"text\\\" name=\\\"Last Name\\\"\\n                     placeholder=\\\"Last Name\\\" class=\\\"form-control input-md\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"resumeFld\\\">Resume</label>\\n          <div class=\\\"col-sm-10\\\">\\n              <textarea id=\\\"resumeFld\\\" [(ngModel)]=\\\"user.resume\\\" type=\\\"textarea\\\" name=\\\"Resume\\\"\\n                        placeholder=\\\"Resume\\\" class=\\\"form-control input-md\\\" rows=\\\"6\\\"></textarea>\\n        </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-2 control-label\\\" ></label>\\n          <div class=\\\"col-sm-10\\\">\\n            <a (click)=\\\"update(user)\\\" id=\\\"updatebtn\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">Update</a>\\n            <a  (click)=\\\"logout()\\\" class=\\\"btn btn-danger btn-block\\\"\\n                type=\\\"button\\\">Logout</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div *ngIf=\\\"publicView\\\">\\n  <div class=\\\"row justify-content-center align-self-center \\\">\\n    <div class=\\\"col-md-10\\\">\\n      <div>\\n        <h2>{{user.firstName}} {{user.lastName}}</h2>\\n      </div>\\n      <br/>\\n\\n\\n        <div class=\\\"form-group row\\\" >\\n          <label class=\\\"col-sm-2 col-form-label\\\">School:</label>\\n          <div class=\\\"dis col-sm-10 col-form-label\\\">\\n            <h6>{{user.school.name}}</h6>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"emailFld\\\">Email Address:</label>\\n          <div class=\\\"dis col-sm-10 col-form-label\\\">\\n            <h6>{{user.email}}</h6>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"resumeFld\\\"></label>\\n          <div class=\\\"col-sm-10\\\">\\n              <textarea style=\\\"overflow:auto;resize:none;\\\" disabled [(ngModel)]=\\\"user.resume\\\" type=\\\"textarea\\\" name=\\\"Resume\\\"\\n                        placeholder=\\\"Resume\\\" class=\\\"form-control input-md\\\" rows=\\\"6\\\"></textarea>\\n          </div>\\n        </div>\\n        <div class=\\\"reviews\\\">\\n          <h5>Rating and Comments</h5>\\n          <br/>\\n          <div *ngIf=\\\"allApplications.length === 0\\\">\\n             <h6>No Reviews yet</h6>\\n          </div>\\n          <ul class=\\\"list-group-flush\\\">\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let aa of allApplications\\\">\\n              <h5>{{aa.position.sectionName}} {{aa.position.semester}} {{aa.position.year}}</h5>\\n              <div class=\\\"row stars\\\">\\n                <div *ngFor=\\\"let r of ' '.repeat(aa.instructorRating).split('')\\\" class=\\\"gold\\\">\\n                  <span><i class=\\\"fa fa-star\\\"></i></span>\\n                </div>\\n                <div *ngFor=\\\"let r of ' '.repeat(5 - aa.instructorRating ).split('')\\\">\\n                  <span><i class=\\\"fa fa-star\\\"></i></span>\\n                </div>\\n              </div>\\n              <textarea style=\\\"overflow:auto;resize:none; margin: 10px; background: #e1b7b7; padding: 10px\\\" input=\\\"textarea\\\" disabled [(ngModel)] = \\\"aa.instructorRemarks\\\" placeholder=\\\"Comments\\\"\\n                        name=\\\"remarks\\\" rows=\\\"5\\\" cols=\\\"40\\\"></textarea>\\n            </li>\\n          </ul>\\n\\n        </div>\\n\\n    </div>\\n\\n  </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AdminServiceClient} from '../services/admin.service.client';\nimport {ApplicantServiceClient} from '../services/applicant.service.client';\nimport {Applicant} from '../models/applicant.model.client';\nimport {Application} from '../models/application.model.client';\nimport {ApplicationServiceClient} from '../services/application.service.client';\n\n@Component({\n  selector: 'app-applicant-profile',\n  templateUrl: './applicant-profile.component.html',\n  styleUrls: ['./applicant-profile.component.css']\n})\nexport class ApplicantProfileComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private applicantService: ApplicantServiceClient,\n              private applicationService: ApplicationServiceClient,\n              private router: Router,\n              private aRoute: ActivatedRoute) {\n    this.aRoute.params.subscribe(params => this.addData(params));\n  }\n\n  user: Applicant = new Applicant();\n  sessionOut;\n  updateS;\n  profView = false;\n  publicView = false;\n  positionId;\n  userId;\n  isIns;\n  allApplications: Application[] = [];\n  ngOnInit() {\n    this.checkProfile();\n  }\n  checkProfile() {\n    this.userService.profile()\n      .then(user => {\n        if (user.status === 401 || user.type !==  'APPLICANT' ) {\n          this.sessionOut = true;\n        } else {\n          this.user = user;\n          this.applicationService.findAllApplicationsForApplicantusingId(user._id)\n            .then(applis => this.allApplications = applis.filter(a => a.instructorRating));\n        }\n        if (user.type ===  'INSTRUCTOR') {\n          this.publicView = true;\n          this.profView = true;\n          this.applicantService.findUserById(this.userId)\n            .then(user1 =>{ this.user = user1\n              this.applicationService.findAllApplicationsForApplicantusingId(user1._id)\n                .then(applis => this.allApplications = applis.filter(a => a.instructorRating));} );\n        }\n      });\n  }\n  addData(params) {\n    this.positionId = params.positionId;\n    this.userId = params.profileId;\n    this.checkProfile();\n  }\n\n  logout() {\n    this.sessionOut = false;\n    this.userService.logout()\n      .then((res) => {this.router.navigate(['login']);\n      });\n  }\n  update(user) {\n      this.applicantService.updateApplicant(user)\n        .then(() => this.updateS = true);\n  }\n  changeView() { this.publicView = !this.publicView; this.updateS = false; }\n\n}\n","module.exports = \".btn-link{\\r\\n  color: green;\\r\\n}\\r\\n.col-lg-3{\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n.gold{\\r\\n  color: gold;\\r\\n}\\r\\n.card{\\r\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n  cursor: pointer;\\r\\n}\\r\\n.row{\\r\\n  margin-left: 4px;\\r\\n}\\r\\n\"","module.exports = \"<br/>\\r\\n<h2>All Applications</h2>\\r\\n<div class=\\\"bg\\\" >\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-3\\\" *ngFor=\\\"let aa of applications\\\">\\r\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">{{aa.applicant.firstName}} {{aa.applicant.lastName}}</h5>\\r\\n          <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{aa.position.sectionName}} {{aa.position.semester}}\\r\\n            {{aa.position.year}}</h6>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n\\r\\n\\r\\n                <div *ngFor=\\\"let r of ' '.repeat(aa.applicant.avgRating ).split('')\\\" class=\\\"gold\\\">\\r\\n                  <span><i class=\\\"fa fa-star\\\"></i></span>\\r\\n                </div>\\r\\n                <div *ngFor=\\\"let r of ' '.repeat(5 - aa.applicant.avgRating ).split('')\\\">\\r\\n                  <span><i class=\\\"fa fa-star\\\"></i></span>\\r\\n                </div>\\r\\n\\r\\n            <!--</div>-->\\r\\n            <div class=\\\"col-md-4\\\" id=\\\"rating\\\">{{aa.applicant.rated}} times</div>\\r\\n          </div>\\r\\n          <button  class=\\\"btn btn-link\\\" routerLink=\\\"/position/{{positionId}}/profile/{{aa.applicant._id}}\\\">View Profile</button>\\r\\n          <button  class=\\\"btn btn-warning\\\" (click)=\\\"hire(aa._id)\\\">Hire</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--<div class=\\\"stars\\\">-->\\r\\n  <!--<div class=\\\"rate-container\\\">-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star \\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star \\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star \\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star \\\"></i>-->\\r\\n  <!--</div>-->\\r\\n  <!---->\\r\\n  <!--<div class=\\\"rate-container\\\">-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star \\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star \\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star \\\"></i>-->\\r\\n  <!--</div>-->\\r\\n  <!--<div class=\\\"rate-container\\\">-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star \\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star \\\"></i>-->\\r\\n  <!--</div>-->\\r\\n  <!--<div class=\\\"rate-container\\\">-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star \\\"></i>-->\\r\\n  <!--</div>-->\\r\\n  <!--<div class=\\\"rate-container\\\">-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n    <!--<i class=\\\"fa fa-star gold\\\"></i>-->\\r\\n  <!--</div>-->\\r\\n<!--</div>-->\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ApplicationServiceClient} from '../services/application.service.client';\nimport {Application} from '../models/application.model.client';\n\n@Component({\n  selector: 'app-applications-grid',\n  templateUrl: './applications-grid.component.html',\n  styleUrls: ['./applications-grid.component.css']\n})\nexport class ApplicationsGridComponent implements OnInit {\n\n  constructor(private aRoute: ActivatedRoute,\n              private applicationService: ApplicationServiceClient) {\n    this.aRoute.params.subscribe(params => this.loadApplications( params.positionId) );\n  }\n\n  positionId = '';\n  applications: Application[] = []\n  loadApplications(id) {\n    this.positionId = id;\n    this.findAllApplications();\n  }\n  ngOnInit() {\n  }\n  findAllApplications() {\n    this.applicationService.findAllApplicationsForAPosition(this.positionId)\n      .then(res => {\n        if (res.status === 200) {\n          res.json().then(applications => this.applications = applications.filter( a => !a.isSelected));\n        }\n      });\n  }\n  hire(id) {\n    this.applicationService.updateIsSelected(id, this.positionId)\n      .then(() => this.findAllApplications());\n  }\n}\n","module.exports = \".display-1 {text-align:center;color:#e1b7b7;}\\r\\n\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <h1 class=\\\"display-1\\\">4<i class=\\\"fa  fa-spin fa-cog fa-3x\\\"></i> 4</h1>\\r\\n    <h1 class=\\\"display-1 \\\">ERROR</h1>\\r\\n    <br/>\\r\\n    <br/>\\r\\n    <br/>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-errorpage',\n  templateUrl: './errorpage.component.html',\n  styleUrls: ['./errorpage.component.css']\n})\nexport class ErrorpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".fa-plus {\\r\\n  color: white;\\r\\n}\\r\\n.btn-primary{\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n/*.bg{*/\\r\\n/*top: 0;*/\\r\\n/*position: fixed;*/\\r\\n/*right: 0;*/\\r\\n/*bottom: 0;*/\\r\\n/*left: 0;*/\\r\\n/*background-size: cover;*/\\r\\n/*background-position: 50% 50%;*/\\r\\n/*background-image:*/\\r\\n/*url('https://www.pixelstalk.net/wp-content/uploads/2016/07/Plain-Wallpaper-HD-For-Desktop-768x480.jpg');*/\\r\\n/*background-repeat:repeat;*/\\r\\n/*}*/\\r\\n\"","module.exports = \"  <div class=\\\"bg\\\">\\n  <br/>\\n  <div class=\\\"alert alert-danger\\\"  *ngIf=\\\"sessionOut\\\">\\n    <strong>Session Expired!</strong> Please login.\\n    <a class=\\\"float-md-right\\\" routerLink=\\\"/login\\\">Login</a>\\n  </div>\\n  <div class=\\\"container-fluid\\\" *ngIf=\\\"!sessionOut\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\">\\n      <a class=\\\"btn btn-primary\\\" routerLink=\\\"/instructor/position\\\">\\n        <b>\\n        <i class=\\\"fa fa-plus\\\"></i>\\n        Add new position</b>\\n      </a>\\n    </div>\\n      <div class=\\\"col-md-10\\\">\\n        <app-position-grid></app-position-grid>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {InstructorServiceClient} from '../services/instrcutor.service.client';\nimport {Instructor} from '../models/instructor.model.client';\nimport {School} from '../models/school.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {PositionServiceClient} from '../services/position.service.client';\nimport {Position} from '../models/position.model.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-instructor-home',\n  templateUrl: './instructor-home.component.html',\n  styleUrls: ['./instructor-home.component.css']\n})\nexport class InstructorHomeComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private positionService: PositionServiceClient,\n              private route: Router) { }\n\n  user: Instructor = new Instructor();\n  instructorSchool: School = new School();\n  sessionOut;\n  positions: Position[] = []\n  ngOnInit() {\n    this.userService.profile()\n      .then(user => {\n        if (user.status === 401 || user.type !== 'INSTRUCTOR') {\n          this.sessionOut = true; }\n      });\n  }\n\n\n}\n","module.exports = \"\\r\\n.red{\\r\\n  color:red;\\r\\n}\\r\\n.form-area\\r\\n{\\r\\n  background-color: #e8f2fc;\\r\\n  padding: 10px 40px 60px;\\r\\n  margin: 10px 0px 60px;\\r\\n  border: 1px solid GREY;\\r\\n}\\r\\n.col-md-4{\\r\\n  text-align: center;\\r\\n}\\r\\n.ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\nlabel\\r\\n{\\r\\n  font-weight: bold;\\r\\n  font-family: \\\"Times New Roman\\\";\\r\\n}\\r\\n.list-group{\\r\\n  position: fixed;\\r\\n  z-index: 100;\\r\\n}\\r\\n.list-group-item{\\r\\n  cursor: pointer;\\r\\n}\\r\\n.btn-secondary{\\r\\n  font-weight: bold;\\r\\n}\\r\\n.addCourse{\\r\\n  margin-top: 5px;\\r\\n  margin-left: 170px;\\r\\n  text-align: center;\\r\\n}\\r\\n.course{\\r\\n  background: #ffeeba;\\r\\n  padding: 5px;\\r\\n  border-bottom-width: thick;\\r\\n  border: black;\\r\\n}\\r\\n.cancel{\\r\\n  margin-left: 145px;\\r\\n  margin-top: 19px;\\r\\n  color: #dc3545;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"alert alert-danger\\\"  *ngIf=\\\"!isIns\\\">\\n  <strong>Session Expired!</strong> Please login.\\n  <a class=\\\"float-md-right\\\" routerLink=\\\"/login\\\">Login</a>\\n</div>\\n<div class=\\\"row justify-content-center align-self-center\\\" *ngIf=\\\"isIns\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <div class=\\\"form-area\\\">\\n      <div class=\\\"form\\\">\\n        <br style=\\\"clear:both\\\">\\n        <h3 style=\\\"margin-bottom: 25px; text-align: center;\\\">Add New Position</h3>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-4\\\">\\n              <label class=\\\"col-4 col-form-label\\\" for=\\\"course\\\">Course</label>\\n          </div>\\n\\n          <div class=\\\"col-md-8\\\">\\n            <div>\\n                <input [(ngModel)]=\\\"courseName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"course\\\" name=\\\"course\\\"\\n                        placeholder=\\\"Course\\\" required (input)=\\\"searchCourse(courseName)\\\" #course=\\\"ngModel\\\"\\n                       *ngIf=\\\"(!(addC))\\\" >\\n              <input  type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"course\\\"\\n                     placeholder=\\\"Course\\\"  disabled *ngIf=\\\"((addC))\\\"  >\\n                <div *ngIf=\\\"showResults\\\">\\n                  <ul class=\\\"list-group\\\">\\n                    <li class=\\\"list-group-item\\\" *ngFor=\\\"let course of results\\\" (click)=\\\"selectCourse(course)\\\">\\n                      {{course.courseNumber}} - {{course.name}}\\n                    </li>\\n                      <button (click)=\\\"addCourse()\\\" class=\\\"btn btn-secondary btn-block\\\">Add Course</button>\\n                  </ul>\\n                </div>\\n          </div>\\n          </div>\\n        </div>\\n\\n\\n\\n        <div class=\\\"form-group row course\\\" *ngIf=\\\"addC\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newCourse.courseNumber\\\" class=\\\"form-control\\\"  name=\\\"section\\\"\\n                   placeholder=\\\"Course Number\\\" required #cnumber=\\\"ngModel\\\">\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newCourse.name\\\" class=\\\"form-control\\\"  name=\\\"section\\\"\\n                   placeholder=\\\"Course Name\\\" required #cname=\\\"ngModel\\\">\\n          </div>\\n\\n              <button class=\\\"btn btn btn-secondary addCourse\\\"\\n                      [ngClass]=\\\"{'disabled':(cnumber.invalid || cname.invalid)}\\\" (click)=\\\"addInstructor(newCourse)\\\">\\n                Add Course</button>\\n              <span class=\\\"cancel\\\" (click)=\\\"cancelAdd()\\\"><i class=\\\"fa fa-times\\\" ></i></span>\\n\\n        </div>\\n\\n\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <label class=\\\"col-4 col-form-label\\\" for=\\\"semsester\\\">Semester</label>\\n          </div>\\n          <div class=\\\"col-md-8\\\">\\n            <select class=\\\"form-control\\\" id=\\\"semsester\\\" [(ngModel)]=\\\"position.semester\\\" required #sem=\\\"ngModel\\\">\\n              <!--<option value disabled selected >Select Semester</option>-->\\n              <option value=\\\"fall\\\">Fall</option>\\n              <option value=\\\"spring\\\">Spring</option>\\n              <option value=\\\"summer-full\\\">Full-Summer</option>\\n              <option value=\\\"summer1\\\">Summer 1</option>\\n              <option value=\\\"summer2\\\">Summer 2</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <label class=\\\"col-4 col-form-label\\\" for=\\\"section\\\">Section</label>\\n          </div>\\n          <div class=\\\"col-md-8\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"position.sectionName\\\" class=\\\"form-control\\\" id=\\\"section\\\" name=\\\"section\\\"\\n                   placeholder=\\\"Section Name\\\" required #sec=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <label class=\\\"col-4 col-form-label\\\" for=\\\"year\\\" >Year</label>\\n          </div>\\n          <div class=\\\"col-md-8\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"year\\\" name=\\\"year\\\" placeholder=\\\"Year\\\"\\n                   required [(ngModel)]=\\\"position.year\\\" #year=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <label class=\\\"col-4 col-form-label\\\" for=\\\"strength\\\" >Strength</label>\\n          </div>\\n          <div class=\\\"col-md-8\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"strength\\\" name=\\\"strength\\\" placeholder=\\\"Strength of Class\\\"\\n                   required [(ngModel)]=\\\"position.classStrength\\\" (change)=\\\"taSuggest(position.classStrength)\\\"\\n                   #num=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <label class=\\\"col-4 col-form-label\\\" for=\\\"no\\\">TA's</label>\\n          </div>\\n          <div class=\\\"col-md-8\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"no\\\" name=\\\"No of TA\\\" placeholder=\\\"Number of TA's\\\"\\n                   required [(ngModel)]=\\\"position.noOfTa\\\" #ta=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <textarea class=\\\"form-control\\\" type=\\\"textarea\\\"  placeholder=\\\"Syllabus\\\" rows=\\\"4\\\"\\n                    [(ngModel)]=\\\"position.syllabus\\\"></textarea>\\n        </div>\\n\\n        <button type=\\\"button\\\" (click)=\\\"submitPos(position)\\\" class=\\\"btn btn-primary btn-block\\\"\\n                [ngClass]=\\\"{'disabled':( sec.invalid\\n                || sem.invalid || year.invalid || num.invalid || ta.invalid)}\\\">\\n          Add Position</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Position} from '../models/position.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Instructor} from '../models/instructor.model.client';\nimport {Course} from '../models/course.model.client';\nimport {PositionServiceClient} from '../services/position.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-instructor-position',\n  templateUrl: './instructor-position.component.html',\n  styleUrls: ['./instructor-position.component.css']\n})\nexport class InstructorPositionComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private courseService: CourseServiceClient,\n              private icaService: PositionServiceClient,\n              private route: Router) { }\n\n  position: Position = new Position();\n  user: Instructor = new Instructor();\n  sessionOut;\n  isIns;\n  addC = false;\n  newCourse: Course = new Course();\n  // selectedCourse: Course;\n  courseName = '';\n  results: Course[] = [];\n  showResults;\n  ngOnInit() {\n    this.userService.profile()\n      .then(user => {\n        if (user.status === 401) {\n          this.sessionOut = true;\n        } else {\n          this.user = user;\n          if (this.user.type === 'INSTRUCTOR') {\n            this.isIns = true;\n          }\n        }});\n  }\n\n\n  selectCourse(course) {\n    this.position.course = course;\n    this.courseName = course.courseNumber + ' - ' + course.name;\n    this.showResults = false;\n  }\n  searchCourse(name) {\n    this.showResults = true;\n    this.courseService.searchCourses(name, this.user.school._id)\n        .then(res => {\n          if (res.status === 200) {\n            res.json()\n              .then(resl => this.results = resl);\n          }\n        });\n    if (name.length === 0) { this.results = []; this.removeAdd(); }\n  }\n  taSuggest(str) {\n    const vari = str / 30;\n    this.position.noOfTa = Math.round(vari) ;\n  }\n  addCourse() {\n    this.addC = true;\n    this.showResults = false;\n    this.courseName = '';\n  }\n  addInstructor( course) {\n    course.school = this.user.school;\n    this.courseService.createCourse(course)\n      .then(res => {\n        if (res.status === 200) {\n         res.json().then(cour => {\n           this.position.course = cour;\n           this.courseName = cour.courseNumber + ' - ' + cour.name;\n           this.addC = false;\n           this.newCourse = new Course();\n         });\n        }\n      });\n  }\n  submitPos(ica) {\n    this.icaService.createPosition(ica)\n      .then(res => {\n        if (res.status === 200) {\n          this.route.navigate(['instructor']);\n        }\n      });\n  }\n  cancelAdd() {\n    this.addC = false;\n  }\n  removeAdd() { this.showResults = false; }\n}\n","module.exports = \".col-md-4{\\r\\n  box-shadow: 0 10px 10px 10px rgba(0, 0, 0, 0.4), 0 16px 30px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n/*.bg{*/\\r\\n/*position: fixed;*/\\r\\n/*top: 0;*/\\r\\n/*right: 0;*/\\r\\n/*bottom: 0;*/\\r\\n/*left: 0;*/\\r\\n/*background-size: cover;*/\\r\\n/*background-position: 50% 50%;*/\\r\\n/*background-image: url('http://cleancanvas.herokuapp.com/img/backgrounds/color-splash.jpg');*/\\r\\n/*background-repeat:repeat;*/\\r\\n/*}*/\\r\\n.col-md-4.col-md-offset-4{\\r\\n  background: white;\\r\\n  margin-top: 30px;\\r\\n  padding-left: 30px;\\r\\n  padding-right: 30px;\\r\\n  padding-bottom: 15px;\\r\\n  padding-top: 10px;\\r\\n}\\r\\n.ng-valid[required], .ng-valid.required  {\\r\\n  border-right: 5px solid #42A948; /* green */\\r\\n}\\r\\n.ng-invalid:not(form)  {\\r\\n  border-right: 5px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<br/>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"bg\\\">\\r\\n  <div class=\\\"row justify-content-center align-self-center\\\">\\r\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <h4 class=\\\"text-center\\\">\\r\\n            <b>LOGIN</b></h4>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"btn btn-dark active\\\"><i class=\\\"fa fa-envelope\\\"></i></span>\\r\\n              </div>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.email\\\" placeholder=\\\"Email\\\" required\\r\\n                     #email=\\\"ngModel\\\"/>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"email.errors.required\\\">\\r\\n                Email is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"btn btn-dark active\\\"><i class=\\\"fa fa-lock\\\"></i></span>\\r\\n              </div>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\" required\\r\\n                     #password=\\\"ngModel\\\"/>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"password.errors.required\\\">\\r\\n                Password is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          </div>\\r\\n          <!--<div class=\\\"alert alert-danger\\\"  *ngIf=\\\"userFail\\\">-->\\r\\n            <!--<strong>Error!</strong> Please enter Username.-->\\r\\n          <!--</div>-->\\r\\n          <!--<div class=\\\"alert noPassword alert-danger\\\"  *ngIf=\\\"passFail\\\">-->\\r\\n            <!--<strong>Error!</strong> Please enter password.-->\\r\\n          <!--</div>-->\\r\\n          <div class=\\\"alert alert-danger\\\"  *ngIf=\\\"loginFailed\\\">\\r\\n            <strong>Error!</strong> Incorrect Credentials.\\r\\n          </div>\\r\\n          <button  class=\\\"btn btn-sm btn-primary btn-block\\\" (click)=\\\"login(user)\\\"\\r\\n                   role=\\\"button\\\" [ngClass]=\\\"{'disabled': (password.invalid || email.invalid)}\\\">\\r\\n            <b>Login</b>\\r\\n          </button>\\r\\n          <div >\\r\\n            <a  style=\\\"float:left\\\" routerLink=\\\"/register\\\">Register</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {User} from '../models/user.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n  Constants\n  user: User = new User();\n  loginFailed = false;\n  passFail = false;\n  userFail = false;\n  login = (reg) => {\n    this.loginFailed = false;\n    this.passFail = false;\n    this.userFail = false;\n    // if ( !reg.email) { this.userFail = true; }\n    // if ( !reg.password) { this.passFail = true; }\n    if (reg.email && reg.password) {\n      this.service.login(reg.username, reg.password)\n        .then((res) => {\n          if (res.status === 401) {\n            this.loginFailed = true;\n          } else {\n           res.json()\n             .then(user => {\n               if (user.type === 'ADMIN') {\n                 this.router.navigate(['/admin']);\n               }\n               if (user.type === 'INSTRUCTOR') {\n                 this.router.navigate(['/instructor']);\n               }\n               if (user.type === 'APPLICANT') {\n                 this.router.navigate(['/applicant']);\n               }\n             })\n            this.router.navigate(['profile']);\n          }\n        });\n    }\n  }\n  ngOnInit() {\n  }\n\n}\n","import {School} from './school.model.client';\r\n\r\nexport class Applicant {\r\n  _id: String;\r\n  username: String;\r\n  password: String;\r\n  firstName: String;\r\n  lastName: String;\r\n  email: String;\r\n  type: String;\r\n  school: School;\r\n  resume: String;\r\n  rated: Number;\r\n  avgRating: Number;\r\n}\r\n","import {Applicant} from './applicant.model.client';\r\nimport {Position} from './position.model.client';\r\n\r\nexport class Application {\r\n  _id: String;\r\n  isSelected: Boolean;\r\n  instructorRemarks: String;\r\n  instructorRating: Number;\r\n  applicant: Applicant;\r\n  position: Position;\r\n}\r\n\r\n","import {School} from './school.model.client';\r\n\r\nexport class Course {\r\n  _id: String;\r\n  name: String;\r\n  courseNumber: String;\r\n  school: School;\r\n}\r\n","import {School} from './school.model.client';\r\n\r\nexport class Instructor {\r\n  _id: String;\r\n  username: String;\r\n  password: String;\r\n  firstName: String;\r\n  lastName: String;\r\n  email: String;\r\n  type: String;\r\n  school: School;\r\n}\r\n","import {Course} from './course.model.client';\r\nimport {Instructor} from './instructor.model.client';\r\n\r\nexport class Position {\r\n  _id: String;\r\n  semester: String;\r\n  classStrength: Number;\r\n  noOfTa: Number;\r\n  skillsMustNeeded: String;\r\n  sectionName: String;\r\n  year: Number;\r\n  postionsFilled: Boolean;\r\n  courseCompleted: Boolean;\r\n  instructor: Instructor;\r\n  course: Course;\r\n  syllabus: String;\r\n  taHired: Number;\r\n}\r\n\r\n","import {School} from './school.model.client';\r\n\r\nexport class RegisterC {\r\n  username: String;\r\n  password: String;\r\n  confirmPassword: String;\r\n  email: String;\r\n  school: School;\r\n}\r\n","export class  School {\r\n  _id: String;\r\n  name: String;\r\n  emailDomain: String;\r\n  city: String;\r\n}\r\n","export class User {\r\n  _id: String;\r\n  username: String;\r\n  password: String;\r\n  firstName: String;\r\n  lastName: String;\r\n  email: String;\r\n  type: String;\r\n}\r\n","module.exports = \".btn-link\\r\\n{\\r\\n  border: black;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n#nav {\\r\\n  font-family: 'Lobster', cursive;\\r\\n  font-weight: bolder;\\r\\n  font-size: x-large;\\r\\n}\\r\\n\\r\\n.navbar{\\r\\n  z-index: 100;\\r\\n}\\r\\n\\r\\n#nav{\\r\\n  color: white;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n#profile{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand mb-0 h1\\\" (click)=\\\"goHome()\\\" id=\\\"nav\\\">\\n    <!--<img src=\\\"https://encrypted-tbn0.gstatic.com/-->\\n      <!--images?q=tbn:ANd9GcQ7KFUTraieZJgtXRgrTfNUECcjeO84V535hx8ekgoRlT27i5KmwQ\\\"-->\\n         <!--width=\\\"30\\\" height=\\\"30\\\" alt=\\\"\\\">-->\\n    TA-Portal\\n  </a>\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\n    <li class=\\\"nav-item\\\" *ngIf=\\\"!user.email\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n    </li>\\n    <li class=\\\"nav-item\\\" *ngIf=\\\"!user.email\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n    </li>\\n    <li class=\\\"nav-item\\\" *ngIf=\\\"user.email\\\">\\n      <a class=\\\"nav-link\\\" id=\\\"profile\\\" >\\n        <i class=\\\"fa fa-user\\\" (click)=\\\"profile()\\\"></i></a>\\n    </li>\\n    <li class=\\\"nav-item\\\" *ngIf=\\\"user.email\\\" >\\n      <a class=\\\"nav-link btn-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n    </li>\\n  </ul>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../models/user.model.client';\nimport {NavigationStart, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  user: User = new User();\n  constructor(private route: Router, private service: UserServiceClient ) {\n    route.events.subscribe((event) => {\n      if (event instanceof NavigationStart) {\n        this.service.profile()\n          .then(user => this.user = user); }\n    } );\n  }\n  logout() {\n    this.service\n      .logout()\n      .then((res) => {this.route.navigate(['login']);\n      });\n  }\n  goHome() {\n    if (this.user.type === 'ADMIN') {this.route.navigate(['admin']); }\n    if (this.user.type === 'INSTRUCTOR') {this.route.navigate(['instructor']); }\n    if (this.user.type === 'APPLICANT') {this.route.navigate(['applicant']); }\n    if (!this.user.email) { this.route.navigate(['home']); }\n  }\n  profile() {\n    if (this.user.type === 'APPLICANT') {this.route.navigate(['applicant/profile']);\n    } else {\n      this.route.navigate(['profile']); }\n\n\n  }\n  ngOnInit() {}\n\n\n}\n","module.exports = \".col-lg-4{\\r\\n  margin-bottom: 45px;\\r\\n}\\r\\n.card{\\r\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n  cursor: pointer;\\r\\n}\\r\\n.fa-trash{\\r\\n  color: red;\\r\\n  margin-left: 50px;\\r\\n}\\r\\n.fa-info-circle{\\r\\n  color: #005cbf;\\r\\n  float: right;\\r\\n}\\r\\n.btn-warning{\\r\\n  margin-top: 5px;\\r\\n}\\r\\na{\\r\\n  font-family: \\\"Times New Roman\\\";\\r\\n}\\r\\n/*.bg{*/\\r\\n/*top: 0;*/\\r\\n/*right: 0;*/\\r\\n/*bottom: 0;*/\\r\\n/*left: 0;*/\\r\\n/*background-size: cover;*/\\r\\n/*background-position: 50% 50%;*/\\r\\n/*background-image:*/\\r\\n/*url('https://www.pixelstalk.net/wp-content/uploads/2016/07/Plain-Wallpaper-HD-For-Desktop-768x480.jpg');*/\\r\\n/*background-repeat:repeat;*/\\r\\n/*}*/\\r\\n.btn-success{\\r\\n  margin-bottom: 5px;\\r\\n  margin-top: 3px;\\r\\n}\\r\\n.btn-primary{\\r\\n  margin-bottom: 5px;\\r\\n  margin-top: 3px;\\r\\n}\\r\\n.btn-link {\\r\\n  color: red;\\r\\n}\\r\\n.nav-tabs {\\r\\n  font-weight: bolder;\\r\\n  font-size: larger;\\r\\n  cursor: pointer;\\r\\n  justify-content: center;\\r\\n}\\r\\n#hire{\\r\\n  color: green;\\r\\n}\\r\\n\"","module.exports = \"<h2>All Positions</h2>\\n<ul class=\\\"nav nav-tabs\\\" *ngIf=\\\"isAppli\\\">\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" [ngClass]=\\\"{'active' : notAppliedPos}\\\" (click)=\\\"seeOtherPos()\\\">Positions</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" [ngClass]=\\\"{'active' : appliedPos}\\\" (click)=\\\"seeAppliedPos()\\\">Applied Position</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" [ngClass]=\\\"{'active' : hiredPos}\\\" (click)=\\\"seeHiredPos()\\\">All Hired Position</a>\\n  </li>\\n</ul>\\n\\n<br/>\\n<div class=\\\"bg\\\" *ngIf=\\\"!isAppli || (isAppli && notAppliedPos)\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-4\\\" *ngFor=\\\"let position of positions\\\">\\n    <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n      <div class=\\\"card-body\\\">\\n        <span ><i class=\\\"fa fa-info-circle\\\"></i></span>\\n        <h5 class=\\\"card-title\\\">{{position.course.courseNumber}} - {{position.course.name}}</h5>\\n        <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{position.sectionName}} {{position.semester}} {{position.year}}\\n        </h6>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-6\\\">Instructor: </div>\\n          <div class=\\\"col-md-6\\\">{{position.instructor.firstName}} {{position.instructor.lastName}}</div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-6\\\">Class Strength: </div>\\n          <div class=\\\"col-md-6\\\">{{position.classStrength}} </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-6\\\">No Of TA's: </div>\\n          <div class=\\\"col-md-6\\\">{{position.noOfTa}} </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-6\\\">TA's Hired: </div>\\n          <div class=\\\"col-md-6\\\">{{position.taHired  }} </div>\\n        </div>\\n        <!--<div class=\\\"form-group row\\\">-->\\n          <!--<div class=\\\"col-md-6\\\">Status: </div>-->\\n          <!--<div class=\\\"col-md-6\\\" *ngIf=\\\"position.postionsFilled\\\">Closed</div>-->\\n          <!--<div class=\\\"col-md-6\\\" *ngIf=\\\"!position.postionsFilled\\\">Open</div>-->\\n        <!--</div>-->\\n        <div *ngIf=\\\"(isIns && !position.postionsFilled)\\\">\\n          <a routerLink=\\\"/position/{{position._id}}/applications\\\" class=\\\"card-link\\\">Check All Applications</a><br/>\\n          <a (click)=\\\"markPositionClosed(position._id)\\\" class=\\\"btn btn-warning\\\">Mark Position Closed</a>\\n          <span (click)=\\\"deleteIca(position._id)\\\" ><i class=\\\"fa fa-trash\\\"></i></span>\\n        </div>\\n        <div *ngIf=\\\"isIns && position.postionsFilled && !position.courseCompleted\\\">\\n          <br/>\\n          <a  class=\\\"btn btn-success\\\" (click)=\\\"markClassComplete(position._id)\\\">Mark Class Completed</a>\\n          <br/>\\n        </div>\\n        <div *ngIf=\\\"isIns && position.courseCompleted\\\">\\n          <br/>\\n          <a  class=\\\"btn btn-primary\\\" routerLink=\\\"/position/{{position._id}}/reviews\\\">Review Tas</a>\\n          <br/>\\n        </div>\\n        <div *ngIf=\\\"isAppli\\\">\\n          <a  class=\\\"btn btn-success\\\" (click)=\\\"applyForPosition(position)\\\">Apply</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n\\n\\n<div class=\\\"bg\\\" *ngIf=\\\"(isAppli && appliedPos)\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\" *ngFor=\\\"let position of appliedPositions\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n          <span routerLink=\\\"/position/{{position._id}}\\\"><i class=\\\"fa fa-info-circle\\\"></i></span>\\n          <h5 class=\\\"card-title\\\">{{position.course.courseNumber}} - {{position.course.name}}</h5>\\n          <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{position.sectionName}} {{position.semester}} {{position.year}}</h6>\\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"col-md-6\\\">Instructor: </div>\\n            <div class=\\\"col-md-6\\\">{{position.instructor.firstName}} {{position.instructor.lastName}}</div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"col-md-6\\\">Class Strength: </div>\\n            <div class=\\\"col-md-6\\\">{{position.classStrength}} </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"col-md-6\\\">No Of TA's: </div>\\n            <div class=\\\"col-md-6\\\">{{position.noOfTa}} </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"col-md-6\\\">TA's Hired: </div>\\n            <div class=\\\"col-md-6\\\">{{position.taHired  }} </div>\\n          </div>\\n          <!--<div class=\\\"form-group row\\\">-->\\n            <!--<div class=\\\"col-md-6\\\">Status: </div>-->\\n            <!--<div class=\\\"col-md-6\\\" *ngIf=\\\"position.postionsFilled\\\">Closed</div>-->\\n            <!--<div class=\\\"col-md-6\\\" *ngIf=\\\"!position.postionsFilled\\\">Open</div>-->\\n          <!--</div>-->\\n            <button  class=\\\"btn btn-link\\\" disabled>Applied</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"bg\\\" *ngIf=\\\"(isAppli && hiredPos)\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\" *ngFor=\\\"let aa of hiredAA\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{aa.position.sectionName}} {{aa.position.semester}}\\n            {{aa.position.year}}</h5>\\n          <!--<h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{aa.position.sectionName}} {{aa.position.semester}}-->\\n            <!--{{aa.position.year}}</h6>-->\\n          <!--<div class=\\\"form-group row\\\">-->\\n            <!--<div class=\\\"col-md-6\\\">Instructor: </div>-->\\n            <!--<div class=\\\"col-md-6\\\">{{aa.position.instructor.firstName}} {{aa.position.instructor.lastName}}</div>-->\\n          <!--</div>-->\\n\\n          <button  class=\\\"btn btn-link\\\" disabled id=\\\"hire\\\">Hired</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Instructor} from '../models/instructor.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Position} from '../models/position.model.client';\nimport {PositionServiceClient} from '../services/position.service.client';\nimport {School} from '../models/school.model.client';\nimport {Router} from '@angular/router';\nimport {Applicant} from '../models/applicant.model.client';\nimport {Application} from '../models/application.model.client';\nimport {ApplicationServiceClient} from '../services/application.service.client';\n\n@Component({\n  selector: 'app-position-grid',\n  templateUrl: './position-grid.component.html',\n  styleUrls: ['./position-grid.component.css']\n})\nexport class PositionGridComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private positionService: PositionServiceClient,\n              private applicationService: ApplicationServiceClient) { }\n\n  user: Instructor = new Instructor();\n  applicant: Applicant = new Applicant();\n  instructorSchool: School = new School();\n  aplicantAllApplications = [];\n  positions: Position[] = [];\n  appliedPosIds = [];\n  appliedPositions: Position[] = [];\n  allPos: Position[] = [];\n  isIns;\n  isAppli;\n  appliedPos = false;\n  notAppliedPos = true;\n  hiredPos = false;\n  hiredAA: Application[] = [];\n  ngOnInit() {\n    this.userService.profile()\n      .then(user => {\n          if ( user.type === 'INSTRUCTOR') {\n            this.isIns = true; }\n          if ( user.type === 'APPLICANT') {\n            this.isAppli = true;\n            this.applicant = user;\n          }\n          this.findAllPostions();\n        }\n      );\n  }\n  findAllPostions() {\n    if (this.isIns) {\n      this.positionService.findAllIcasForInstructor()\n        .then(res => {\n          if (res.status === 200) {\n            res.json().then(icas => this.positions = icas);\n          }\n        });\n    }\n    if (this.isAppli) {\n      this.positionService.findAllIcas()\n        .then(res => {\n          if (res.status === 200) {\n            res.json().then(icas => this.allPos = icas\n              .filter(ica => ica.course.school === this.applicant.school._id && !ica.postionsFilled));\n          }\n        }).then(() => this.applicationService.findAllApplicationsForApplicant()\n        .then(applications => this.aplicantAllApplications = applications))\n        .then(() => this.filterAppliedApplications());\n    }\n    if (! this.isIns && ! this.isAppli) {\n      this.positionService.findAllIcas()\n        .then(res => {\n          if (res.status === 200) {\n            res.json().then(icas => this.positions = icas\n              .filter(ica =>  !ica.postionsFilled));\n          }\n        });\n    }\n  }\n  deleteIca(id) {\n    this.positionService.deleteIca(id)\n      .then(() => this.findAllPostions());\n  }\n  markPositionClosed(id) {\n    this.positionService.updatePositionFilled(id)\n      .then(() => this.findAllPostions());\n  }\n  applyForPosition(position) {\n    if (this.isAppli) {\n      this.applicationService.createApplication(position, this.applicant)\n        .then(() => this.findAllPostions());\n    }\n  }\n  filterAppliedApplications() {\n    this.aplicantAllApplications.map(a => this.appliedPosIds.push(a.position._id));\n    this.appliedPositions = this.allPos.filter(pos =>   this.appliedPosIds.includes(pos._id));\n    this.positions = this.allPos.filter(pos =>   !this.appliedPosIds.includes(pos._id));\n    this.hiredAA = this.aplicantAllApplications.filter(aa => aa.isSelected );\n    // if (!this.aplicantAllApplications) {\n    //   this.positions = this.allPos;\n    // }\n  }\n  seeAppliedPos() {\n    this.appliedPos = true;\n    this.hiredPos = false;\n    this.notAppliedPos = false;\n  }\n  seeOtherPos() {\n    this.notAppliedPos = true;\n    this.appliedPos = false;\n    this.hiredPos = false;\n  }\n  seeHiredPos() {\n    this.notAppliedPos = false;\n    this.appliedPos = false;\n    this.hiredPos = true;\n  }\n  markClassComplete(id) {\n    const pos = {_id: id, courseCompleted: true};\n    this.positionService.updatePosition(pos)\n      .then(() => this.findAllPostions());\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  position-page works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-position-page',\n  templateUrl: './position-page.component.html',\n  styleUrls: ['./position-page.component.css']\n})\nexport class PositionPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".col-form-label{\\r\\n}\\r\\nh2{\\r\\n  text-align: center;\\r\\n  font-family: \\\"Times New Roman\\\";\\r\\n}\\r\\n.enrollment\\r\\n{\\r\\n  background: #ffeeba;\\r\\n  padding: 10px;\\r\\n  margin: 10px;\\r\\n}\\r\\n.list-group-item\\r\\n{\\r\\n  background: #ffeeba;\\r\\n}\\r\\n.ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center align-self-center \\\">\\n    <div class=\\\"col-md-10\\\">\\n      <div class=\\\"error alert-danger fade in\\\"  style=\\\"display: none;\\\">\\n        <strong>Error!</strong>Profile Not Updated.\\n      </div>\\n      <div class=\\\"alert alert-success\\\"  *ngIf=\\\"updateS\\\">\\n        <strong>Success!</strong>Profile Updated.\\n      </div>\\n      <div>\\n        <h2>User profile</h2>\\n      </div>\\n      <br/>\\n      <div class=\\\"alert alert-danger\\\"  *ngIf=\\\"sessionOut\\\">\\n        <strong>Session Expired!</strong>Please login.\\n        <a class=\\\"float-md-right\\\" routerLink=\\\"/login\\\">Login</a>\\n      </div>\\n      <div *ngIf=\\\"!sessionOut\\\">\\n\\n        <div class=\\\"form-group row\\\" *ngIf=\\\"!isAdmin\\\">\\n          <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"schoolFld\\\">School</label>\\n          <div class=\\\"col-sm-8\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-addon\\\">\\n                <a class=\\\"btn btn-dark active\\\">  <i class=\\\"fa fa-school\\\"></i>\\n                </a>\\n              </div>\\n              <input id=\\\"schoolFld\\\" [(ngModel)]=\\\"user.school.name\\\"  type=\\\"text\\\"\\n                     placeholder=\\\"School\\\" class=\\\"form-control input-md\\\" disabled>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"emailFld\\\">Email Address</label>\\n          <div class=\\\"col-sm-8\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-addon\\\">\\n                <a class=\\\"btn btn-dark active\\\">  <i class=\\\"fa fa-envelope\\\"></i>\\n                </a>\\n              </div>\\n              <input id=\\\"emailFld\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"Email Address\\\" type=\\\"text\\\"\\n                     placeholder=\\\"Email Address\\\" class=\\\"form-control input-md\\\" disabled>\\n\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"firstNameFld\\\">First Name</label>\\n          <div class=\\\"col-sm-8\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-addon\\\">\\n                <a class=\\\"btn btn-dark active\\\"> <i class=\\\"fa fa-align-justify\\\"></i>\\n                </a>\\n              </div>\\n              <input [(ngModel)]=\\\"user.firstName\\\" id=\\\"firstNameFld\\\" name=\\\"First Name\\\" type=\\\"text\\\"\\n                     placeholder=\\\"First Name\\\" class=\\\"form-control input-md\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <!-- Text input-->\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-4 col-form-label\\\" for=\\\"lastNameFld\\\">Last Name</label>\\n          <div class=\\\"col-sm-8\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-addon\\\">\\n                <a class=\\\"btn btn-dark active\\\">  <i class=\\\"fa fa-align-justify\\\"></i>\\n                </a>\\n              </div>\\n              <input id=\\\"lastNameFld\\\" [(ngModel)]=\\\"user.lastName\\\" name=\\\"Secondary Occupation (if any)\\\" type=\\\"text\\\"\\n                     placeholder=\\\"Last Name\\\" class=\\\"form-control input-md\\\">\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-4 control-label\\\" ></label>\\n          <div class=\\\"col-sm-8\\\">\\n            <a (click)=\\\"update(user)\\\" id=\\\"updatebtn\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">Update</a>\\n            <a  (click)=\\\"logout()\\\" class=\\\"btn btn-danger btn-block\\\"\\n                type=\\\"button\\\">Logout</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AdminServiceClient} from '../services/admin.service.client';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {InstructorServiceClient} from '../services/instrcutor.service.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private adminService: AdminServiceClient,\n              private userService: UserServiceClient,\n              private insService: InstructorServiceClient,\n              private router: Router) { }\n\n  user;\n  sessionOut;\n  isAdmin\n  updateS;\n  ngOnInit() {\n    this.userService.profile()\n      .then(user => {\n        if (user.status === 401 || (user.type !==  'ADMIN' && user.type !==  'INSTRUCTOR') ) {\n          this.sessionOut = true;\n        } else {\n          this.user = user;\n          if (this.user.type === 'ADMIN') {\n            this.isAdmin = true;\n          }\n        }});\n  }\n\n  logout() {\n    this.sessionOut = false;\n    this.userService.logout()\n      .then((res) => {this.router.navigate(['login']);\n      });\n  }\n  update(user) {\n    if (this.isAdmin) {\n      this.adminService.updateAdmin(user)\n        .then(() => this.updateS = true);\n    } else {\n      this.insService.updateInstructor(user)\n        .then(() => this.updateS = true);\n    }\n  }\n\n}\n","module.exports = \".col-md-4{\\r\\n  box-shadow: 0 10px 10px 10px rgba(0, 0, 0, 0.4), 0 16px 30px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n.list-group{\\r\\n  position: fixed;\\r\\n  z-index: 20;\\r\\n  margin-left: 45px;\\r\\n}\\r\\n.list-group-item{\\r\\n  cursor: pointer;\\r\\n}\\r\\n/*.bg{*/\\r\\n/*position: fixed;*/\\r\\n/*top: 0;*/\\r\\n/*right: 0;*/\\r\\n/*bottom: 0;*/\\r\\n/*left: 0;*/\\r\\n/*background-size: cover;*/\\r\\n/*background-position: 50% 50%;*/\\r\\n/*background-image: url('http://cleancanvas.herokuapp.com/img/backgrounds/color-splash.jpg');*/\\r\\n/*background-repeat:repeat;*/\\r\\n/*}*/\\r\\n.col-md-4.col-md-offset-4{\\r\\n  background: white;\\r\\n  margin-top: 30px;\\r\\n  padding-left: 30px;\\r\\n  padding-right: 30px;\\r\\n  padding-bottom: 15px;\\r\\n  padding-top: 10px;\\r\\n}\\r\\n.ng-valid[required], .ng-valid.required  {\\r\\n  border-right: 5px solid #42A948; /* green */\\r\\n}\\r\\n.ng-invalid:not(form)  {\\r\\n  border-right: 5px solid #a94442; /* red */\\r\\n}\\r\\n.nav-tabs{\\r\\n  font-size: large;\\r\\n  margin-left: 65px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.nav-tabs a{\\r\\n  color: black;\\r\\n}\\r\\n.instructor.active{\\r\\n  background: orange;\\r\\n  border: orange;\\r\\n}\\r\\n.insback{\\r\\n  padding-left: 10px;\\r\\n  padding-right: 10px;\\r\\n  padding-bottom: 10px;\\r\\n  padding-top: 10px;\\r\\n  background: orange;\\r\\n  border: orange;\\r\\n}\\r\\n.applicant.active{\\r\\n  background: #cbdd2a;\\r\\n  border: #cbdd2a;\\r\\n}\\r\\n.aplback{\\r\\n  padding-left: 10px;\\r\\n  padding-right: 10px;\\r\\n  padding-bottom: 10px;\\r\\n  padding-top: 10px;\\r\\n  background: #cbdd2a;\\r\\n  border: #cbdd2a;\\r\\n}\\r\\n.btn-secondary{\\r\\n  font-weight: bold;\\r\\n}\\r\\n.addCourse{\\r\\n  margin-top: 5px;\\r\\n  margin-left: 97px;\\r\\n  text-align: center;\\r\\n}\\r\\n.course{\\r\\n  background: #ffeeba;\\r\\n  padding: 5px;\\r\\n  border: black;\\r\\n  margin-right: -5px;\\r\\n  margin-left: -6px;\\r\\n}\\r\\n.cancel{\\r\\n  margin-left: 91px;\\r\\n  margin-top: 13px;\\r\\n  color: #dc3545;\\r\\n}\\r\\n\"","module.exports = \"<br/>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"bg\\\">\\n    <div class=\\\"row justify-content-center align-self-center\\\">\\n      <div class=\\\"col-md-4 col-md-offset-4\\\">\\n        <div class=\\\"panel panel-default\\\">\\n          <div class=\\\"panel-body\\\">\\n            <h4 class=\\\"text-center\\\">\\n              <b>REGISER</b></h4>\\n            <nav class=\\\"nav nav-tabs\\\" >\\n              <a class=\\\" nav-link\\\" [ngClass]=\\\"{'instructor active':isIns}\\\" (click)=\\\"userIsInstructor()\\\">\\n                Instructor</a>\\n              <a class=\\\"nav-link\\\" [ngClass]=\\\"{'applicant active':isAppl, 'active':isAppl }\\\" (click)=\\\"userIsApplicant()\\\">\\n                Applicant</a>\\n            </nav>\\n            <div [ngClass]=\\\"{'insback':isIns, 'aplback':isAppl }\\\" >\\n\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"btn btn-dark active\\\"><i class=\\\"fa fa-school\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"schoolName\\\" placeholder=\\\"School\\\" required\\n                     (input)=\\\"schoolChange(schoolName)\\\" #school=\\\"ngModel\\\" (blur)=\\\"clearSchool()\\\"/>\\n                </div>\\n                <div *ngIf=\\\"showResults\\\">\\n                  <ul class=\\\"list-group\\\">\\n                    <li class=\\\"list-group-item\\\" *ngFor=\\\"let school of results\\\" (click)=\\\"selectSchool(school)\\\">\\n                        {{school.name}}\\n                    </li>\\n                    <button  (click)=\\\"addSchool()\\\" class=\\\"btn btn-secondary btn-block\\\">Add School</button>\\n                  </ul>\\n                </div>\\n                <div *ngIf=\\\"school.invalid && (school.dirty || school.touched) && !addC\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"school.errors.required  && !addC \\\">\\n                    School is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row course\\\" *ngIf=\\\"addC\\\">\\n                <div class=\\\"col-md-6\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"newSchool.name\\\" class=\\\"form-control\\\"  name=\\\"section\\\"\\n                         placeholder=\\\"School Name\\\" required #cnumber=\\\"ngModel\\\">\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"newSchool.emailDomain\\\" class=\\\"form-control\\\"  name=\\\"section\\\"\\n                         placeholder=\\\"Email Domain\\\" required #cname=\\\"ngModel\\\">\\n                </div>\\n\\n                <button class=\\\"btn btn btn-secondary addCourse\\\"\\n                        [ngClass]=\\\"{'disabled':(cnumber.invalid || cname.invalid)}\\\" (click)=\\\"addNewSchool(newSchool)\\\">\\n                  Add Course</button>\\n                <span class=\\\"cancel\\\" (click)=\\\"cancelAdd()\\\"><i class=\\\"fa fa-times\\\" ></i></span>\\n\\n              </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"btn btn-dark active\\\"><i class=\\\"fa fa-envelope\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.email\\\" placeholder=\\\"Email\\\" required\\n                       #email=\\\"ngModel\\\"/>\\n              </div>\\n              <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"email.errors.required\\\">\\n                  Email is required.\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"btn btn-dark active\\\"><i class=\\\"fa fa-lock\\\"></i></span>\\n                </div>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\" required\\n                       #password=\\\"ngModel\\\"/>\\n              </div>\\n              <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"password.errors.required\\\">\\n                  Password is required.\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"btn btn-dark active\\\"><i class=\\\"fa fa-thumbtack\\\"></i></span>\\n                </div>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.confirmPassword\\\"\\n                       placeholder=\\\"Confirm Password\\\"\\n                       required\\n                       #cpassword=\\\"ngModel\\\"/>\\n              </div>\\n              <div *ngIf=\\\"cpassword.invalid && (cpassword.dirty || cpassword.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"cpassword.errors.required\\\">\\n                  Confirm Password is required.\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <!--<div class=\\\"alert alert-danger\\\"  *ngIf=\\\"userFail\\\">-->\\n          <!--<strong>Error!</strong> Please enter Username.-->\\n          <!--</div>-->\\n          <!--<div class=\\\"alert noPassword alert-danger\\\"  *ngIf=\\\"passFail\\\">-->\\n          <!--<strong>Error!</strong> Please enter password.-->\\n          <!--</div>-->\\n          <div class=\\\"alert alert-danger\\\"  *ngIf=\\\"loginFailed\\\">\\n            <strong>Error!</strong> Email Id exists\\n          </div>\\n            <div class=\\\"alert alert-danger\\\"  *ngIf=\\\"passmatch\\\">\\n              <strong>Error!</strong> Both password do not match\\n            </div>\\n          <button  class=\\\"btn btn-sm btn-primary btn-block\\\" (click)=\\\"register(user)\\\"\\n                   role=\\\"button\\\" [ngClass]=\\\"{'disabled': (school.invalid || password.invalid ||\\n                   email.invalid || cpassword.invalid)}\\\">\\n            <b>Register</b>\\n          </button>\\n          </div>\\n          <div >\\n            <a  style=\\\"float:left\\\" routerLink=\\\"/login\\\">Login</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport {RegisterC} from '../models/regsiter.model.client';\nimport {SchoolServiceClient} from '../services/school.service.client';\nimport {School} from '../models/school.model.client';\nimport {Course} from '../models/course.model.client';\nimport {InstructorServiceClient} from '../services/instrcutor.service.client';\nimport {ApplicantServiceClient} from '../services/applicant.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n\n  constructor(private router: Router,\n              private service: UserServiceClient,\n              private schoolService: SchoolServiceClient,\n              private insService: InstructorServiceClient,\n              private studentService: ApplicantServiceClient) { }\n  Constants\n  user: RegisterC = new RegisterC();\n  loginFailed = false;\n  isIns = true;\n  isAppl = false;\n  results: School[] = [];\n  schoolName = '';\n  newSchool: School = new School();\n  selected;\n  showResults;\n  addC;\n  passmatch;\n  register = (reg) => {\n    this.passmatch = false;\n    if (this.user.password !== this.user.confirmPassword ) {\n      this.passmatch = true; } else {\n      if (reg.email && reg.password && reg.confirmPassword) {\n        if (this.isIns) {\n          this.insService.createInstructor(reg)\n            .then(res => {\n              if (res.status === 200) {\n                this.router.navigate(['instructor']);\n              }\n              if (res.status === 401) {\n                this.loginFailed = true;\n              }\n            });\n        }\n        if (this.isAppl) {\n          this.studentService.createApplicant(reg)\n            .then(res => {\n              if (res.status === 200) {\n                this.router.navigate(['applicant']);\n              } else {\n                this.loginFailed = true;\n              }\n            });\n        }\n      }\n    }\n  }\n  ngOnInit() {\n  }\n  userIsInstructor() {\n    this.isIns = true;\n    this.isAppl = false;\n  }\n  userIsApplicant() {\n    this.isAppl = true;\n    this.isIns = false;\n  }\n  schoolChange(name) {\n    this.showResults = true;\n      this.schoolService.searchSchool(name)\n        .then(res => {\n          if (res.status === 200) {\n            res.json()\n              .then(schools => this.results = schools);\n          }\n        });\n    if (name.length === 0) {\n      this.showResults = false;\n    }\n  }\n  selectSchool(school) {\n    this.user.school = school;\n    this.schoolName = school.name;\n    this.showResults = false;\n    this.selected = true;\n  }\n  clearSchool() {\n    if (!this.selected) {this.schoolName = ''; }\n  }\n  addSchool() {\n    this.addC = true;\n    this.showResults = false;\n    this.schoolName = '';\n    this.selected = true;\n  }\n  addNewSchool( school) {\n    this.schoolService.createSchool(school)\n      .then(res => {\n        if (res.status === 200) {\n          res.json().then(cour => {\n            this.user.school = cour;\n            this.schoolName =  cour.name;\n            this.addC = false;\n            this.newSchool = new School();\n          });\n        }\n      });\n  }\n  cancelAdd() {\n    this.addC = false;\n  }\n}\n","module.exports = \".list-group-item{\\r\\n  font-size: large;\\r\\n  font-weight: bolder;\\r\\n  margin-bottom: 18px;\\r\\n  /*box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);*/\\r\\n\\r\\n}\\r\\n.box{\\r\\n  padding: 10px;\\r\\n  margin-top: -12px;\\r\\n  margin-right: -19px;\\r\\n  margin-left: -19px;\\r\\n  margin-bottom: -9px;\\r\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n.review{\\r\\n  padding: 10px;\\r\\n  margin-top: 26px;\\r\\n  margin-bottom: -16px;\\r\\n}\\r\\n.btn-warning{\\r\\n  margin: 10px;\\r\\n  margin-top: -2px;\\r\\n}\\r\\n.rate-container{\\r\\n  padding: 10px;\\r\\n}\\r\\n.gold{\\r\\n  color: gold;\\r\\n}\\r\\n\"","module.exports = \"<br/>\\n<h2>Reviews for: {{section}} {{sem}}  {{year}}</h2>\\n<br/>\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let aa of hiredAppplications\\\">\\n   <div class=\\\"box\\\">\\n      {{aa.applicant.firstName}} {{aa.applicant.lastName}}\\n      <span class=\\\"float-right\\\" *ngIf=\\\"aa._id !== aaSelected\\\" (click)=\\\"selectAA(aa)\\\">\\n        <i class=\\\"fa fa-angle-double-down\\\" ></i></span>\\n      <span class=\\\"float-right\\\" *ngIf=\\\"aa._id === aaSelected\\\"(click)=\\\"unSelectAA()\\\"><i class=\\\"fa fa-angle-double-up\\\">\\n          </i></span>\\n   </div>\\n    <div class=\\\"review\\\" *ngIf=\\\"aa._id === aaSelected\\\">\\n\\n      <div class=\\\"rate-container\\\">\\n        <i class=\\\"fa fa-star fa-2x\\\" (click)=\\\"rateStars(1)\\\" [ngClass]=\\\"{'gold': workingAA.instructorRating >= 1}\\\"></i>\\n        <i class=\\\"fa fa-star fa-2x\\\" (click)=\\\"rateStars(2)\\\" [ngClass]=\\\"{'gold': workingAA.instructorRating >= 2}\\\"></i>\\n        <i class=\\\"fa fa-star fa-2x\\\" (click)=\\\"rateStars(3)\\\" [ngClass]=\\\"{'gold': workingAA.instructorRating >= 3}\\\"></i>\\n        <i class=\\\"fa fa-star fa-2x\\\" (click)=\\\"rateStars(4)\\\" [ngClass]=\\\"{'gold': workingAA.instructorRating >= 4}\\\"></i>\\n        <i class=\\\"fa fa-star fa-2x\\\" (click)=\\\"rateStars(5)\\\" [ngClass]=\\\"{'gold': workingAA.instructorRating >= 5}\\\"></i>\\n      </div>\\n      <textarea input=\\\"textarea\\\" [(ngModel)] = \\\"workingAA.instructorRemarks\\\" placeholder=\\\"Comments\\\" name=\\\"remarks\\\"\\n                rows=\\\"4\\\" cols=\\\"40\\\" *ngIf=\\\"!hide\\\"></textarea>\\n      <textarea input=\\\"textarea\\\" disabled [(ngModel)] = \\\"workingAA.instructorRemarks\\\" placeholder=\\\"Comments\\\" name=\\\"remarks\\\"\\n                rows=\\\"4\\\" cols=\\\"40\\\" *ngIf=\\\"hide\\\"></textarea>\\n      <a class=\\\"btn btn-warning\\\" [ngClass]=\\\"{'disabled': hide}\\\" (click)=\\\"saveRatings(aa)\\\">Save</a>\\n    </div>\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ApplicationServiceClient} from '../services/application.service.client';\nimport {Application} from '../models/application.model.client';\n\n@Component({\n  selector: 'app-review-grid',\n  templateUrl: './review-grid.component.html',\n  styleUrls: ['./review-grid.component.css']\n})\nexport class ReviewGridComponent implements OnInit {\n\n  constructor(private aRoute: ActivatedRoute,\n              private applicationService: ApplicationServiceClient) {\n    aRoute.params.subscribe(params => this.loadAllApplications(params.positionId) );\n  }\n  positionId;\n  aaSelected;\n  section;\n  sem;\n  year;\n  hide;\n  // starRating = 0;\n  workingAA: Application = new Application();\n  hiredAppplications: Application[] = []\n  loadAllApplications(posId) {\n    this.positionId = posId;\n    this.findAllApplications();\n  }\n\n  findAllApplications() {\n   this.applicationService.findAllApplicationsForAPosition(this.positionId)\n     .then(res => {\n       if (res.status === 200 ) {\n         res.json()\n           .then(applications => {\n             this.hiredAppplications = applications.filter(aa => aa.isSelected);\n              this.section = this.hiredAppplications[0].position.sectionName;\n             this.sem = this.hiredAppplications[0].position.semester;\n             this.year = this.hiredAppplications[0].position.year;\n           });\n       }\n     });\n  }\n  selectAA( aa ) {\n    this.hide = false;\n    if (aa.instructorRating) {\n      this.hide = true;\n    }\n    this.aaSelected = aa._id;\n    this.workingAA.instructorRating = aa.instructorRating;\n    this.workingAA.instructorRemarks = aa.instructorRemarks;\n  }\n  unSelectAA() {\n    this.aaSelected = null;\n    this.workingAA.instructorRating = 0;\n    this.workingAA.instructorRemarks = '';\n    this.hide = false;\n  }\n  ngOnInit() {\n  }\n  rateStars(val) {\n    if (!this.hide) {\n    this.workingAA.instructorRating = val; }\n  }\n  saveRatings( aa ) {\n    const ty = {applicant: aa.applicant._id, _id: aa._id, instructorRemarks: this.workingAA.instructorRemarks,\n      instructorRating: this.workingAA.instructorRating}\n    this.applicationService.reviewApplication(ty)\n      .then(() => this.hide = true );\n  }\n}\n","\r\nexport class AdminServiceClient {\r\n  url = 'https://taportal-backend.herokuapp.com';\r\n  createAdmin(instructor) {\r\n    return fetch(this.url + '/api/admin/', {\r\n      method: 'post',\r\n      body: JSON.stringify(instructor),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  // deleteInstructor(id) {\r\n  //   return fetch(this.url + '/api/instructor/' + id, {\r\n  //     method: 'delete',\r\n  //     credentials: 'include',\r\n  //   });\r\n  // }\r\n  updateAdmin(instructor) {\r\n    return fetch(this.url + '/api/admin/' + instructor._id, {\r\n      body: JSON.stringify(instructor),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'put',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  profile() {\r\n    return fetch(this.url + '/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 401) { return response; }\r\n        return response.json(); });\r\n  }\r\n\r\n}\r\n","export class ApplicantServiceClient {\r\n  url = 'https://taportal-backend.herokuapp.com';\r\n  findUserById(userId) {\r\n    return fetch(this.url + '/api/applicant/' + userId + '/profile')\r\n      .then(response => {return response.json(); } );\r\n  }\r\n  findAllInstructors() {\r\n    return fetch(this.url + '/api/applicant/', {\r\n      credentials: 'include'\r\n    } )\r\n      .then(response => response.json());\r\n  }\r\n  createApplicant(applicant) {\r\n    const newIns = { email: applicant.email, firstName: applicant.firstName, lastName: applicant.lastName,\r\n      password: applicant.password,  confirmPassword: applicant.password }\r\n    return fetch(this.url + '/api/school/' + applicant.school._id + '/applicant/', {\r\n      method: 'post',\r\n      body: JSON.stringify(newIns),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  deleteApplicant(id) {\r\n    return fetch(this.url + '/api/applicant/' + id, {\r\n      method: 'delete',\r\n      credentials: 'include',\r\n    });\r\n  }\r\n  updateApplicant(applicant) {\r\n    return fetch(this.url + '/api/applicant/' + applicant._id, {\r\n      body: JSON.stringify(applicant),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'put',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  profile() {\r\n    return fetch(this.url + '/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 401) { return response; }\r\n        return response.json(); });\r\n  }\r\n\r\n}\r\n","\r\nexport class ApplicationServiceClient {\r\n  url = 'https://taportal-backend.herokuapp.com';\r\n  // findPositionById(id) {\r\n  //   return fetch(this.url + '/api/ica/' + id + '/details' )\r\n  //     .then(response => response.json());\r\n  // }\r\n  findAllApplication() {\r\n    return fetch(this.url + '/api/aa/', {\r\n      credentials: 'include'\r\n    } );\r\n  }\r\n  findAllApplicationsForAPosition(icaId) {\r\n    return fetch(this.url + '/api/ica/' + icaId + '/aa/', {\r\n      credentials: 'include'\r\n    } );\r\n  }\r\n  findAllApplicationsForApplicant() {\r\n    return fetch(this.url + '/api/applicant/aa/', {\r\n      credentials: 'include'\r\n    } ).then(res => { return res.json(); } );\r\n  }\r\n  findAllApplicationsForApplicantusingId(id) {\r\n    return fetch(this.url + '/api/applicant/' + id + '/aa/', {\r\n      credentials: 'include'\r\n    } ).then(res => { return res.json(); } );\r\n  }\r\n  updateIsSelected(icaId, posId) {\r\n    return fetch(this.url + '/api/position/' + posId + '/aa/' + icaId + '/updateselected?status=true', {\r\n      credentials: 'include'\r\n    } );\r\n  }\r\n  createApplication(position, user) {\r\n    return fetch(this.url + '/api/applicant/ica/' + position._id + '/aa' , {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  // deleteIca(id) {\r\n  //   return fetch(this.url + '/api/ica/' + id, {\r\n  //     method: 'delete',\r\n  //     credentials: 'include',\r\n  //   });\r\n  // }\r\n  reviewApplication(aa) {\r\n    return fetch(this.url + '/api/aa/review', {\r\n      body: JSON.stringify(aa),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'put',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  // updatePositionFilled(id) {\r\n  //   return fetch(this.url + '/api/ica/' + id + '/updatePositionFilled?status=true', {\r\n  //     credentials: 'include',\r\n  //     method: 'put',\r\n  //     headers: {\r\n  //       'content-type': 'application/json'\r\n  //     }\r\n  //   });\r\n  // }\r\n  // profile() {\r\n  //   return fetch(this.url + '/api/profile',\r\n  //     {\r\n  //       credentials: 'include', // include, same-origin, *omit\r\n  //     })\r\n  //     .then((response) => {\r\n  //       if (response.status === 401) { return response; }\r\n  //       return response.json(); });\r\n  // }\r\n\r\n}\r\n","export class CourseServiceClient {\r\n  url = 'https://taportal-backend.herokuapp.com';\r\n  findCourseById(courseId) {\r\n    return fetch(this.url + '/api/course/' + courseId)\r\n      .then(response => response.json());\r\n  }\r\n  findAllCourses() {\r\n    return fetch(this.url + '/api/course/', {\r\n      credentials: 'include'\r\n    } )\r\n      .then(response => response.json());\r\n  }\r\n  createCourse(course) {\r\n    return fetch(this.url + '/api/school/' + course.school._id + '/course/', {\r\n      method: 'post',\r\n      body: JSON.stringify(course),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  deleteCourse(id) {\r\n    return fetch(this.url + '/api/course/' + id, {\r\n      method: 'delete',\r\n      credentials: 'include',\r\n    });\r\n  }\r\n  updateCourse(course) {\r\n    return fetch(this.url + '/api/course/' + course._id, {\r\n      body: JSON.stringify(course),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'put',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  searchCourses(name, schoolId) {\r\n    const course = {searchField: name, school: schoolId};\r\n    return fetch(this.url + '/api/course/search', {\r\n      body: JSON.stringify(course),\r\n      credentials: 'include',\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\nexport class InstructorServiceClient {\r\n  url = 'https://taportal-backend.herokuapp.com';\r\n  findUserById(userId) {\r\n    return fetch(this.url + '/api/user/' + userId)\r\n      .then(response => response.json());\r\n  }\r\n  findAllInstructors() {\r\n    return fetch(this.url + '/api/instructor/', {\r\n      credentials: 'include'\r\n    } )\r\n      .then(response => response.json());\r\n  }\r\n  createInstructor(instructor) {\r\n    const newIns = { email: instructor.email, firstName: instructor.firstName, lastName: instructor.lastName,\r\n      password: instructor.password,  confirmPassword: instructor.password }\r\n    return fetch(this.url + '/api/school/' + instructor.school._id + '/instructor/', {\r\n      method: 'post',\r\n      body: JSON.stringify(newIns),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  deleteInstructor(id) {\r\n    return fetch(this.url + '/api/instructor/' + id, {\r\n      method: 'delete',\r\n      credentials: 'include',\r\n    });\r\n  }\r\n  updateInstructor(instructor) {\r\n    return fetch(this.url + '/api/instructor/' + instructor._id, {\r\n      body: JSON.stringify(instructor),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'put',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  profile() {\r\n    return fetch(this.url + '/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 401) { return response; }\r\n        return response.json(); });\r\n  }\r\n\r\n}\r\n","\r\nexport class PositionServiceClient {\r\n  url = 'https://taportal-backend.herokuapp.com';\r\n  findPositionById(id) {\r\n    return fetch(this.url + '/api/ica/' + id + '/details' )\r\n      .then(response => response.json());\r\n  }\r\n  findAllIcas() {\r\n    return fetch(this.url + '/api/ica/', {\r\n      credentials: 'include'\r\n    } );\r\n  }\r\n  findAllIcasForInstructor() {\r\n    return fetch(this.url + '/api/instructor/ica/', {\r\n      credentials: 'include'\r\n    } );\r\n  }\r\n  findAllIcasForSchool(id) {\r\n    return fetch(this.url + '/api/school/' + id + '/ica/', {\r\n      credentials: 'include'\r\n    } );\r\n  }\r\n  findAllIcasForApplicant() {\r\n    return fetch(this.url + '/api/applicant/ica/', {\r\n      credentials: 'include'\r\n    } );\r\n  }\r\n  createPosition(position) {\r\n    const newIns = { classStrength: position.classStrength, noOfTa: position.noOfTa, syllabus: position.syllabus,\r\n      sectionName: position.sectionName,  year: position.year, semester: position.semester }\r\n    return fetch(this.url + '/api/instructor/course/' + position.course._id , {\r\n      method: 'post',\r\n      body: JSON.stringify(newIns),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  deleteIca(id) {\r\n    return fetch(this.url + '/api/ica/' + id, {\r\n      method: 'delete',\r\n      credentials: 'include',\r\n    });\r\n  }\r\n  updatePosition(ica) {\r\n    return fetch(this.url + '/api/ica/' + ica._id, {\r\n      body: JSON.stringify(ica),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'put',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  updatePositionFilled(id) {\r\n    return fetch(this.url + '/api/ica/' + id + '/updatePositionFilled?status=true', {\r\n      credentials: 'include',\r\n      method: 'put',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  // profile() {\r\n  //   return fetch(this.url + '/api/profile',\r\n  //     {\r\n  //       credentials: 'include', // include, same-origin, *omit\r\n  //     })\r\n  //     .then((response) => {\r\n  //       if (response.status === 401) { return response; }\r\n  //       return response.json(); });\r\n  // }\r\n\r\n}\r\n","\r\nexport class SchoolServiceClient {\r\n  url = 'https://taportal-backend.herokuapp.com';\r\n  findSchoolById(schoolId) {\r\n    return fetch(this.url + '/api/school/' + schoolId)\r\n      .then(response => response.json());\r\n  }\r\n  findAllSchools() {\r\n    return fetch(this.url + '/api/school/', {\r\n      credentials: 'include'\r\n    } )\r\n      .then(response => response.json());\r\n  }\r\n  createSchool(school) {\r\n    return fetch(this.url + '/api/school/', {\r\n      method: 'post',\r\n      body: JSON.stringify(school),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  deleteSchool(id) {\r\n    return fetch(this.url + '/api/school/' + id, {\r\n      method: 'delete',\r\n      credentials: 'include',\r\n    });\r\n  }\r\n  updateSchool(newSchool) {\r\n    return fetch(this.url + '/api/school/' + newSchool._id, {\r\n      body: JSON.stringify(newSchool),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'put',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  searchSchool(name) {\r\n    const school = {name}\r\n    return fetch(this.url + '/api/school/search', {\r\n      body: JSON.stringify(school),\r\n      credentials: 'include',\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {User} from '../models/user.model.client';\r\n\r\nexport class UserServiceClient {\r\n  url = 'https://taportal-backend.herokuapp.com';\r\n  //  private user = new User();\r\n  // public $toggle = this.user.asObservable();\r\n  findUserById(userId) {\r\n    return fetch(this.url + '/api/user/' + userId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  login(username, password) {\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch(this.url + '/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    return fetch(this.url + '/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  profile() {\r\n    return fetch(this.url + '/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 401) { return response; }\r\n        return response.json(); });\r\n  }\r\n  // createUser(username, password) {\r\n  //   const user = {\r\n  //     username: username,\r\n  //     password: password\r\n  //   };\r\n  //   return fetch(this.url + '/api/user', {\r\n  //     body: JSON.stringify(user),\r\n  //     credentials: 'include', // include, same-origin, *omit\r\n  //     method: 'post',\r\n  //     headers: {\r\n  //       'content-type': 'application/json'\r\n  //     }\r\n  //   });\r\n  // }\r\n  // updateUser(newUser) {\r\n  //   return fetch(this.url + '/api/user', {\r\n  //     body: JSON.stringify(newUser),\r\n  //     credentials: 'include', // include, same-origin, *omit\r\n  //     method: 'put',\r\n  //     headers: {\r\n  //       'content-type': 'application/json'\r\n  //     }\r\n  //   });\r\n  // }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}